{"version":3,"sources":["webpack://ros-frontend/./src/App.scss","webpack://ros-frontend/./src/Routes.js","webpack://ros-frontend/./src/App.js","webpack://ros-frontend/./src/Components/RosTable/redux/actions.js","webpack://ros-frontend/./src/Components/RosTable/redux/systemsTableReducer.js","webpack://ros-frontend/./src/Components/RosTable/redux/index.js","webpack://ros-frontend/./src/Utilities/asyncComponent.js","webpack://ros-frontend/./src/Utilities/getBaseName.js","webpack://ros-frontend/./src/store/index.js","webpack://ros-frontend/./src/App.scss?75e2"],"names":["___CSS_LOADER_API_IMPORT___","___CSS_LOADER_AT_RULE_IMPORT_0___","exports","i","push","module","id","RosPage","asyncComponent","OopsPage","NoPermissionsPage","InsightsRoute","Component","component","rootClass","rest","root","document","getElementById","removeAttribute","classList","add","setAttribute","Route","propTypes","PropTypes","Routes","path","useLocation","pathname","Switch","paths","render","some","p","Redirect","to","childProps","history","App","register","notifications","notificationsReducer","systemsTableState","systemsTableRootReducer","insights","chrome","init","identifyApp","this","appNav","on","event","props","navId","withRouter","connect","handleErrors","response","ok","Error","statusText","fetchSystems","fetchParams","params","limit","perPage","offset","page","url","URL","ROS_API_ROOT","window","location","origin","search","URLSearchParams","toString","type","payload","fetch","then","res","json","applyReducerHash","FETCH_CLOUD_SYSTEMS_LIST_PENDING","state","loading","FETCH_CLOUD_SYSTEMS_LIST_FULFILLED","action","emptyState","meta","count","systemsData","data","totalSystems","FETCH_CLOUD_SYSTEMS_LIST_REJECTED","systemError","combineReducers","RosTable","systemsTableReducer","importComponent","setState","C","release","pathName","split","shift","registry","middleware","ReducerRegistry","promiseMiddleware","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","isEqualLocals","dispose"],"mappings":"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","file":"js/762.12bdc580c7ee8283a025.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-notifications/index.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".ros{}.ros :root{--ins-color--orange: #ec7a08}.ros button:focus{outline:none}.ros .ros .pf-c-card__body{padding-left:0;padding-right:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Redirect, Route, Switch, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from './Utilities/asyncComponent';\nimport some from 'lodash/some';\nimport { routes as paths } from '../package.json';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst RosPage = asyncComponent(() => import(/* webpackChunkName: \"RosPage\" */ './Routes/RosPage/RosPage'));\nconst OopsPage = asyncComponent(() => import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage'));\nconst NoPermissionsPage = asyncComponent(() => import(/* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'));\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n    root.setAttribute('role', 'main');\n\n    return (<Route {...rest} component={Component} />);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n    const path = useLocation().pathname;\n\n    return (\n        <Switch>\n            <InsightsRoute path='/' component={ RosPage } rootClass='rosPage' />\n            <InsightsRoute path={paths.oops} component={OopsPage} rootClass='oopsPage' />\n            <InsightsRoute path={paths.noPermissions} component={NoPermissionsPage} rootClass='noPermissionsPage' />\n            { /* Finally, catch all unmatched routes */}\n            <Route render={() => some(paths, p => p === path) ? null : (<Redirect to={paths.rosPage} />)} />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        history: PropTypes.shape({\n            push: PropTypes.func\n        })\n    })\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport { systemsTableRootReducer } from './Components/RosTable/redux';\nimport { register } from './store';\n\nclass App extends Component {\n\n    componentDidMount () {\n        register({ notifications: notificationsReducer, systemsTableState: systemsTableRootReducer });\n        insights.chrome.init();\n        // TODO change this to your appname\n        insights.chrome.identifyApp('ros');\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount () {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <NotificationsPortal />\n                <Routes childProps={ this.props } />\n            </React.Fragment>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter (connect()(App));\n","import { ROS_API_ROOT, SYSTEMS_API_ROOT } from '../../../constants';\n\nfunction fetchSystems(fetchParams = {}) {\n    let params = {};\n    params.limit = fetchParams.perPage;\n    params.offset = (fetchParams.page - 1) * fetchParams.perPage;\n\n    let url = new URL(ROS_API_ROOT + SYSTEMS_API_ROOT,  window.location.origin);\n    url.search = new URLSearchParams(params).toString();\n    return {\n        type: 'FETCH_CLOUD_SYSTEMS_LIST',\n        payload: fetch(url).then(handleErrors)\n        .then(res =>  res.json())\n    };\n}\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n\n    return response;\n}\n\nexport default {\n    fetchSystems\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {\n    loading: false,\n    systemsData: [],\n    systemError: {},\n    totalSystems: 0,\n    emptyState: false\n};\n\nconst systemsTableReducer = applyReducerHash({\n    FETCH_CLOUD_SYSTEMS_LIST_PENDING: (state) => ({ ...state, loading: true }),\n    FETCH_CLOUD_SYSTEMS_LIST_FULFILLED: (state, action) => {\n        return {\n            ...state,\n            loading: false,\n            emptyState: action.payload.meta.count === 0,\n            systemsData: action.payload.data,\n            totalSystems: action.payload.meta.count\n        };\n    },\n    // Need to handle errors\n    FETCH_CLOUD_SYSTEMS_LIST_REJECTED: (state, action) => ({\n        ...state, loading: false,  emptyState: true, systemError: action.payload\n    })\n}, initialState);\n\nexport default systemsTableReducer;\n","import { combineReducers } from 'redux';\nexport { default as systemsTableActions } from './actions';\nimport systemsTableReducer from './systemsTableReducer';\n\nexport const systemsTableRootReducer = combineReducers({\n    RosTable: systemsTableReducer\n});\n","import React, { Component } from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <Skeleton />;\n        }\n    }\n\n    return AsyncComponent;\n}\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nlet registry;\n\nexport function init (...middleware) {\n    if (registry) {\n        throw new Error('store already initialized');\n    }\n\n    registry = new ReducerRegistry({}, [\n        promiseMiddleware,\n        ...middleware\n    ]);\n\n    // registry.register({ rosSystemsTableState: rosSystemsTableRootReducer });\n\n    //If you want to register all of your reducers, this is good place.\n    /*\n     *  registry.register({\n     *    someName: (state, action) => ({...state})\n     *  });\n     */\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}