{"version":3,"sources":["webpack:///./src/Components/RosTable/RosTable.scss","webpack:///./src/Components/RosTable/RosTable.scss?8eef","webpack:///./src/Components/RosTable/ExpandedRow.js","webpack:///./src/Components/RosTable/ProgressScoreBar.js","webpack:///./src/Components/EmptyStateDisplay/EmptyStateDisplay.js","webpack:///./src/Components/RosTable/RosTable.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","ExpandedRow","id","inlineFieldsArray","label","value","cloudProvider","instanceType","idlingTime","ioWait","TextContent","className","TextList","component","TextListVariants","dl","map","field","index","Fragment","TextListItem","TextListItemVariants","dt","dd","propTypes","string","ProgressScoreBar","val","valueScore","measureLocation","calNumScore","Math","round","textLabel","Progress","min","max","valueText","5","4","3","2","number","EmptyStateDisplay","button","color","error","icon","isSmall","text","title","EmptyState","variant","EmptyStateVariant","small","large","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","join","PropTypes","object","any","bool","array","actionLink","textValue","classAsPerType","linkPath","href","renderRecommendations","applyClasses","RosTable","props","state","columns","cellFormatters","expandable","rows","createRows","onCollapse","bind","event","rowKey","isOpen","this","setState","rowsData","systems","length","row","performance_score","cpuScore","cpu_score","memoryScore","memory_score","IOScore","io_score","facts","cloud_provider","instance_type","idling_time","io_wait","recommendationCount","recommendation_count","cells","display_name","parent","heightAuto","colSpan","EmptyTable","Table","aria-label","React","Component"],"mappings":"8EAEAA,EADkC,EAAQ,EAChCC,EAA4B,IAE9BC,KAAK,CAACC,EAAOC,EAAI,ixCAAkxC,KAE3yCD,EAAOH,QAAUA,G,oBCLjB,IAAIK,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACF,EAAOC,EAAIC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAEjBC,EAAS,EAAQ,GAAR,CAAgEJ,EAASC,GAEnFD,EAAQK,SAAQP,EAAOH,QAAUK,EAAQK,QAG3CP,EAAOQ,IAAIC,OAAO,KAAgH,WACjI,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAACV,EAAOC,EAAIS,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXZ,EAAQK,OAAQG,EAAWH,QAEjB,MAAM,IAAIQ,MAAM,uDAE5BT,EAAOI,MAGRV,EAAOQ,IAAIQ,SAAQ,WAAaV,Q,oQCjCpBW,EAAc,SAAC,GAA6D,IAA3DC,EAA2D,EAA3DA,GACpBC,EAAoB,CACtB,CAAEC,MAAO,WAAYC,MAF4D,EAAvDC,eAG1B,CAAEF,MAAO,gBAAiBC,MAHuD,EAAxCE,cAIzC,CAAEH,MAAO,cAAeC,MAJyD,EAA1BG,YAKvD,CAAEJ,MAAO,WAAYC,MAL4D,EAAdI,SAQvE,OACI,kBAACC,EAAA,YAAD,CAAaC,UAAU,gBACnB,kBAACC,EAAA,SAAD,CAAUV,GAAIA,EAAIW,UAAWC,mBAAiBC,IACxCZ,EAAkBa,KAAI,SAACC,EAAOC,GAAR,OACpB,kBAAC,IAAMC,SAAP,CAAgBtB,IAAKqB,GACjB,kBAACE,EAAA,aAAD,CAAcP,UAAWQ,uBAAqBC,IAAML,EAAMb,OAC1D,kBAACgB,EAAA,aAAD,CAAcP,UAAWQ,uBAAqBE,IAAMN,EAAMZ,cAQlFJ,EAAYuB,UAAY,CACpBtB,GAAIsB,IAAUC,OACdnB,cAAekB,IAAUC,OACzBlB,aAAciB,IAAUC,OACxBjB,WAAYgB,IAAUC,OACtBhB,OAAQe,IAAUC,Q,aCjCTC,EAAmB,SAAC,GAAqC,IAG9CC,EAHWC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,gBACrCC,EAAcC,KAAKC,MAAMJ,EAAa,IACtCK,EAAY,GAAH,OAAOH,EAAP,MAQf,OACI,kBAAC,IAAMX,SAAP,KACI,kBAACe,EAAA,SAAD,CAAU7B,MAAQyB,EAAcK,IAAK,EAAGC,IAAK,EAAGhC,MAAQ6B,EACpDI,UAAYJ,EACZtB,UAAS,8BAXDgB,EAWqCG,EAX3B,CAC1BQ,EAAG,YACHC,EAAG,YACHC,EAAG,WACHC,EAAG,cACLd,IAAQ,eAOEE,gBAAkBA,MAKlCH,EAAiBF,UAAY,CACzBK,gBAAiBL,IAAUC,OAC3BG,WAAYJ,IAAUkB,Q,iDCrBbC,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,KAAMC,EAA9C,EAA8CA,MAA9C,OAC7B,kBAACC,EAAA,WAAD,CAAYC,QAAUJ,EAAUK,oBAAkBC,MAAQD,oBAAkBE,OACtER,GAAQ,kBAACS,EAAA,eAAD,CACNT,KAAOA,EACPF,MAAQA,GAAgB,KACxBlC,UAAYqC,EAAU,yBAA2B,OAErD,kBAACS,EAAA,MAAD,CACIC,aAAeV,EAAU,KAAO,KAChCW,KAAOX,EAAU,KAAO,MAEtBE,GAEN,kBAACU,EAAA,eAAD,KACMX,aADN,EACMA,EAAMY,KAAK,MACXf,GAEJF,IAIVD,EAAkBnB,UAAY,CAC1BoB,OAAQkB,IAAUC,OAClBlB,MAAOiB,IAAUrC,OACjBqB,MAAOgB,IAAUrC,OACjBsB,KAAMe,IAAUE,IAChBhB,QAASc,IAAUG,KACnBhB,KAAMa,IAAUI,MAChBhB,MAAOY,IAAUrC,Q,+aCvBrB,IAAM0C,EAAa,SAACjE,EAAIkE,EAAWC,EAAgBC,GAAhC,OACf,uBAAGC,KAAOD,EAAW3D,UAAS,kBAAc0D,EAAd,iBAAqCnE,IAAQkE,IAGzEI,EAAwB,SAACtE,EAAIkE,GAC/B,IAAIK,EAAe,kBAKnB,OAJkB,IAAdL,IACAK,GAAgB,cAGbN,EAAWjE,EAAIkE,EAAWK,EAAc,MAG7CC,E,gCACF,WAAYC,GAAO,0BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,CACL,CAAE3B,MAAO,cAAe4B,eAAgB,CAACC,MACzC,CAAE7B,MAAO,aACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,UAEb8B,KAAM,EAAKC,cAEf,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,QAbH,E,+CAgBRC,EAAOC,EAAQC,GAAQ,IACtBN,EAASO,KAAKX,MAAdI,KAKRA,EAAKK,GAAQC,OAASA,EACtBC,KAAKC,SAAS,CACVR,W,mCAKJ,IAAMS,EAAWF,KAAKZ,MAAMe,QAE5B,OAAwB,IAApBD,EAASE,OACF,IAAQF,GAAU,SAACG,EAAK1E,GAAU,MACyC0E,EAAIC,kBAA/DC,EADkB,EAC7BC,UAAmCC,EADN,EACRC,aAAqCC,EAD7B,EACmBC,SADnB,EAGYP,EAAIQ,MAD7B9F,EAFa,EAE7B+F,eAA8C9F,EAFjB,EAEE+F,cACtB9F,EAHoB,EAGjC+F,YAAkC9F,EAHD,EAGR+F,QACrBtG,EAAkD0F,EAAlD1F,GAA0BuG,EAAwBb,EAA9Cc,qBAEZ,MAAO,CACH,CACIxG,GAAIgB,EACJoE,QAAQ,EACRqB,MAAO,CACH,CAAEzD,MAAOiB,EAAWjE,EAAI0F,EAAIgB,aAAc,cAAe,MACzD,CAAE1D,MAAO,kBAAC,EAAD,CAAkBrB,gBAAgB,UAAUD,WAAYkE,KACjE,CAAE5C,MAAO,kBAAC,EAAD,CAAkBrB,gBAAgB,UAAUD,WAAYoE,KACjE,CAAE9C,MAAO,kBAAC,EAAD,CAAkBrB,gBAAgB,UAAUD,WAAYsE,KACjE,CAAEhD,MAAOsB,EAAsBtE,EAAIuG,IACnC,CAAEvD,MAAO0C,EAAIhB,SAIrB,CACI+B,MAAO,CACH,CACIzD,MAAO,kBAAC,EACD,CAAEhD,KAAII,gBAAeC,eAAcC,aAAYC,aAI9DoG,OAAgB,EAAR3F,OAMb,CACH,CACI4F,YAAY,EACZH,MAAO,CACH,CACIhC,MAAO,CAAEoC,QAAS,GAClB7D,MAAO,kBAAC8D,EAAA,WAAD,KACH,kBAAC,EAAD,CAAmB9D,MAAM,qC,+BAS5C,MACqBqC,KAAKX,MAAvBC,EADH,EACGA,QAASG,EADZ,EACYA,KAEjB,OACI,kBAACiC,EAAA,EAAD,CAAOC,aAAW,mBAAmBhC,WAAYK,KAAKL,WAClD9B,QAAQ,UACR4B,KAAMA,EAAM2B,MAAO9B,EAASlE,UAAU,qBACtC,kBAAC,IAAD,MACA,kBAAC,IAAD,W,GA3FOwG,IAAMC,WAiG7B1C,EAASlD,UAAY,CACjBkE,QAASlE,IAAU0C,OAGRQ","file":"js/9.87aa14711a1356bb16b2.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ros-systems-table .pf-c-content.expanded-row{--pf-c-content--dl--RowGap: var(--pf-global--spacer--xs);--pf-c-content--FontSize: var(--pf-global--FontSize--sm)}.ros-systems-table .pf-link:hover{text-decoration:none}.ros-systems-table .recommendations.green-400{color:var(--pf-global--palette--green-400)}.ros-systems-table .recommendations{padding-left:var(--pf-global--spacer--lg);font-weight:var(--pf-global--FontWeight--bold)}.ros-systems-table .pf-c-progress{grid-template-columns:auto}.ros-systems-table .pf-c-progress .pf-c-progress__status{text-align:left}.progress-score-bar{grid-gap:var(--pf-global--spacer--xs)}.progress-score-bar span.pf-c-progress__status-icon{display:none}.progress-score-bar .pf-c-progress__bar:before{background:var(--pf-global--palette--black-400)}.progress-score-bar .pf-c-progress__measure{color:var(--pf-global--palette--black-600)}.green-100 .pf-c-progress__indicator{background:var(--pf-global--palette--green-100)}.green-400 .pf-c-progress__indicator{background:var(--pf-global--palette--green-300)}.gold-400 .pf-c-progress__indicator{background:var(--pf-global--palette--gold-300)}.orange-300 .pf-c-progress__indicator{background:var(--pf-global--palette--orange-300)}.danger-200 .pf-c-progress__indicator{background:var(--pf-global--palette--red-200)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./RosTable.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./RosTable.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./RosTable.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\n\nexport const ExpandedRow = ({ id, cloudProvider, instanceType, idlingTime, ioWait }) =>  {\n    const inlineFieldsArray = [\n        { label: 'Provider', value: cloudProvider },\n        { label: 'Instance Type', value: instanceType },\n        { label: 'Idling time', value: idlingTime },\n        { label: 'I/O Wait', value: ioWait }\n    ];\n\n    return (\n        <TextContent className='expanded-row'>\n            <TextList id={id} component={TextListVariants.dl}>\n                { inlineFieldsArray.map((field, index) => (\n                    <React.Fragment key={index} >\n                        <TextListItem component={TextListItemVariants.dt}>{ field.label }</TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>{ field.value }</TextListItem>\n                    </React.Fragment>\n                ))}\n            </TextList>\n        </TextContent>\n    );\n};\n\nExpandedRow.propTypes = {\n    id: propTypes.string,\n    cloudProvider: propTypes.string,\n    instanceType: propTypes.string,\n    idlingTime: propTypes.string,\n    ioWait: propTypes.string\n};\n","import React from 'react';\nimport { Progress } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nexport const ProgressScoreBar = ({ valueScore, measureLocation }) =>  {\n    const calNumScore = Math.round(valueScore / 20);\n    const textLabel = `${ calNumScore }/5`;\n    const colorclass = (val) =>  ({\n        5: 'green-400',\n        4: 'green-100',\n        3: 'gold-400',\n        2: 'orange-300'\n    }[val] || 'danger-200');\n\n    return (\n        <React.Fragment>\n            <Progress value={ calNumScore } min={0} max={5} label={ textLabel }\n                valueText={ textLabel }\n                className={ `progress-score-bar ${colorclass(calNumScore)}` }\n                measureLocation={ measureLocation } />\n        </React.Fragment>\n    );\n};\n\nProgressScoreBar.propTypes = {\n    measureLocation: propTypes.string,\n    valueScore: propTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\n\nexport const EmptyStateDisplay = ({ button, color, error, icon, isSmall, text, title }) => (\n    <EmptyState variant={ isSmall ? EmptyStateVariant.small : EmptyStateVariant.large }>\n        { icon && <EmptyStateIcon\n            icon={ icon }\n            color={ color ? color : null }\n            className={ isSmall ? 'small-empty-state-icon' : null }\n        /> }\n        <Title\n            headingLevel={ isSmall ? 'h5' : 'h1' }\n            size={ isSmall ? 'md' : 'lg' }\n        >\n            { title }\n        </Title>\n        <EmptyStateBody>\n            { text?.join('\\n') }\n            { error }\n        </EmptyStateBody>\n        { button }\n    </EmptyState>\n);\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n","import React from 'react';\nimport { Table, TableHeader, TableBody, expandable } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport { flatMap } from 'lodash';\nimport { ExpandedRow } from './ExpandedRow';\nimport { ProgressScoreBar } from './ProgressScoreBar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components';\nimport { EmptyStateDisplay } from '../EmptyStateDisplay/EmptyStateDisplay';\nimport './RosTable.scss';\n\nconst actionLink = (id, textValue, classAsPerType, linkPath) => (\n    <a href={ linkPath } className={ `pf-link ${classAsPerType} link-${id}` }>{textValue}</a>\n);\n\nconst renderRecommendations = (id, textValue) => {\n    let applyClasses = 'recommendations';\n    if (textValue === 0) {\n        applyClasses += ' green-400';\n    }\n\n    return actionLink(id, textValue, applyClasses, '#');\n};\n\nclass RosTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n                { title: 'System Name', cellFormatters: [expandable] },\n                { title: 'CPU score' },\n                { title: 'Memory score' },\n                { title: 'I/O score' },\n                { title: 'Recommendations' },\n                { title: 'State' }\n            ],\n            rows: this.createRows()\n        };\n        this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse(event, rowKey, isOpen) {\n        const { rows } = this.state;\n        /**\n         * Please do not use rowKey as row index for more complex tables.\n         * Rather use some kind of identifier like ID passed with each row.\n         */\n        rows[rowKey].isOpen = isOpen;\n        this.setState({\n            rows\n        });\n    }\n\n    createRows() {\n        const rowsData = this.props.systems;\n\n        if (rowsData.length !== 0) {\n            return flatMap(rowsData, (row, index) => {\n                const { cpu_score: cpuScore, memory_score: memoryScore, io_score: IOScore } = row.performance_score;\n                const { cloud_provider: cloudProvider, instance_type: instanceType,\n                    idling_time: idlingTime, io_wait: ioWait } = row.facts;\n                const { id, recommendation_count: recommendationCount } = row;\n\n                return [\n                    {\n                        id: index,\n                        isOpen: false,\n                        cells: [\n                            { title: actionLink(id, row.display_name, 'system-link', '#') },\n                            { title: <ProgressScoreBar measureLocation='outside' valueScore={cpuScore} /> },\n                            { title: <ProgressScoreBar measureLocation='outside' valueScore={memoryScore} /> },\n                            { title: <ProgressScoreBar measureLocation='outside' valueScore={IOScore} /> },\n                            { title: renderRecommendations(id, recommendationCount) },\n                            { title: row.state }\n\n                        ]\n                    },\n                    {\n                        cells: [\n                            {\n                                title: <ExpandedRow {\n                                    ...{ id, cloudProvider, instanceType, idlingTime, ioWait }\n                                } />\n                            }\n                        ],\n                        parent: index * 2\n                    }\n                ];\n            });\n        } else {\n\n            return [\n                {\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 7 },\n                            title: <EmptyTable>\n                                <EmptyStateDisplay title=\"No matching records found\" />\n                            </EmptyTable>\n                        }\n                    ]\n                }\n            ];\n        }\n    }\n\n    render() {\n        const { columns, rows } = this.state;\n\n        return (\n            <Table aria-label=\"Expandable table\" onCollapse={this.onCollapse}\n                variant='compact'\n                rows={rows} cells={columns} className=\"ros-systems-table\">\n                <TableHeader />\n                <TableBody />\n            </Table>\n        );\n    }\n}\n\nRosTable.propTypes = {\n    systems: propTypes.array\n};\n\nexport default RosTable;\n"],"sourceRoot":""}