{"version":3,"sources":["webpack://ros-frontend/./src/Components/SystemDetail/RecommendationsTable.scss","webpack://ros-frontend/./src/Components/EmptyStateDisplay/EmptyStateDisplay.js","webpack://ros-frontend/./src/Components/SystemDetail/RecommendationsTable.js","webpack://ros-frontend/./src/Components/SystemDetail/RecommendationsTable.scss?b838"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","EmptyStateDisplay","button","color","error","icon","isSmall","text","title","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","className","Title","headingLevel","size","EmptyStateBody","join","propTypes","PropTypes","renderExpandedView","row","TextContent","Text","component","TextVariants","reason","resolution","RecommendationsTable","props","state","columns","cellFormatters","expandable","rows","createRows","onCollapse","bind","event","rowKey","isOpen","this","setState","rowsData","recommendations","length","index","cells","description","parent","heightAuto","colSpan","EmptyTable","CheckCircleIcon","Table","aria-label","TableHeader","TableBody","React","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/14.2eb3d1f6d1f19a30c655.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ros .ros-recommendations-table.pf-c-table tr{--pf-c-table--cell--FontSize: var(--pf-global--FontSize--md)}.ros .ros-recommendations-table.pf-c-table .ros-rec-content p{margin-bottom:0}.ros .ros-recommendations-table.pf-c-table .recs-table-empty .pf-c-empty-state__icon{fill:var(--pf-global--success-color--100)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\n\nexport const EmptyStateDisplay = ({ button, color, error, icon, isSmall, text, title }) => (\n    <EmptyState variant={ isSmall ? EmptyStateVariant.small : EmptyStateVariant.large }>\n        { icon && <EmptyStateIcon\n            icon={ icon }\n            color={ color ? color : null }\n            className={ isSmall ? 'small-empty-state-icon' : null }\n        /> }\n        <Title\n            headingLevel={ isSmall ? 'h5' : 'h1' }\n            size={ isSmall ? 'md' : 'lg' }\n        >\n            { title }\n        </Title>\n        <EmptyStateBody>\n            { text?.join('\\n') }\n            { error }\n        </EmptyStateBody>\n        { button }\n    </EmptyState>\n);\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n","import React from 'react';\nimport { Table, TableHeader, TableBody, expandable } from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport { flatMap } from 'lodash';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { EmptyStateDisplay } from '../EmptyStateDisplay/EmptyStateDisplay';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport './RecommendationsTable.scss';\n\nconst renderExpandedView = (row) => {\n    return (\n        <TextContent className='ros-rec-content'>\n            <Text component={TextVariants.p}>\n                {row.reason}\n            </Text>\n            <Text component={TextVariants.p}>\n                Recommendations: {row.resolution}\n            </Text>\n        </TextContent>\n    );\n};\n\nclass RecommendationsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [{ title: 'Name', cellFormatters: [expandable] }],\n            rows: this.createRows()\n        };\n        this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse(event, rowKey, isOpen) {\n        const { rows } = this.state;\n        /**\n         * Please do not use rowKey as row index for more complex tables.\n         * Rather use some kind of identifier like ID passed with each row.\n         */\n        rows[rowKey].isOpen = isOpen;\n        this.setState({\n            rows\n        });\n    }\n\n    createRows() {\n        const rowsData = this.props.recommendations;\n        if (rowsData && rowsData.length !== 0) {\n            return flatMap(rowsData, (row, index) => {\n                return [\n                    {\n                        id: index,\n                        isOpen: index === 0 ? true : false,\n                        cells: [{ title: row.description }]\n                    },\n                    {\n                        cells: [{ title: renderExpandedView(row) }],\n                        parent: index * 2\n                    }\n                ];\n            });\n        } else {\n            return [\n                {\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 7 },\n                            title: <EmptyTable className='recs-table-empty'>\n                                <EmptyStateDisplay title=\"No recommendations\"\n                                    text={['No known recommendations affect this system']}\n                                    icon={CheckCircleIcon}/>\n                            </EmptyTable>\n                        }\n                    ]\n                }\n            ];\n        }\n    }\n\n    render() {\n        const { columns, rows } = this.state;\n        return (\n            <Table aria-label=\"Expandable table\" onCollapse={this.onCollapse}\n                variant='compact'\n                rows={rows} cells={columns} className=\"ros-recommendations-table\">\n                <TableHeader />\n                <TableBody />\n            </Table>\n        );\n\n    }\n}\n\nRecommendationsTable.propTypes = {\n    recommendations: propTypes.array\n};\n\nexport default RecommendationsTable;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RecommendationsTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RecommendationsTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}