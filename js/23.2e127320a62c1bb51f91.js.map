{"version":3,"sources":["webpack://ros-frontend/./src/Components/SystemDetail/SystemRecommendations.js"],"names":["RecommendationsTable","asyncComponent","defaultFilters","name","label","value","isEmptyFilters","activeFilters","Object","values","find","item","length","constructActiveFilters","entries","map","key","category","chipKey","chips","Array","isArray","onDeleteFilter","itemsToRemove","currItem","filter","SystemRecommendations","props","state","page","perPage","inventoryId","debouncedThrottleHandleChange","debounce","throttleHandleChange","bind","this","requestLoadSysRecs","options","params","description","descriptionFilter","loadSysRecs","filters","setState","pagination","totalRecs","recsData","Suspense","fallback","Card","headingLevel","className","itemCount","onSetPage","_e","updatePagination","onPerPageSelect","isCompact","widgetId","filterConfig","items","type","filterValues","onChange","event","applyFilters","placeholder","activeFiltersConfig","onDelete","isAll","filtersOnDeletion","loading","recommendations","variant","React","propTypes","PropTypes","connect","systemRecsReducer","recommendationsData","totalRecommendations","dispatch","uuid"],"mappings":"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","file":"js/23.2e127320a62c1bb51f91.js","sourcesContent":["import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { loadSysRecs } from '../../store/actions';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Title,\n    Stack,\n    StackItem,\n    Pagination\n} from '@patternfly/react-core';\nimport debounce from 'lodash/debounce';\nimport asyncComponent from '../../Utilities/asyncComponent';\nconst RecommendationsTable = asyncComponent(() => import('./RecommendationsTable'));\n\n/**\n * This is a dumb component that only recieves properties from a smart component.\n * Dumb components are usually functions and not classes.\n *\n * @param props the props given by the smart component.\n */\nconst defaultFilters = {\n    name: {\n        label: 'Name',\n        value: ''\n    }\n};\n\nexport const isEmptyFilters = (activeFilters) => Object.values(activeFilters).find(\n    (item) => item?.value?.length > 0 || item?.length > 0\n);\n\nexport const constructActiveFilters = (activeFilters) => Object.entries(activeFilters).map(([key, { label, value } = {}]) => ({\n    category: label,\n    chipKey: key,\n    chips:\n        value?.length > 0\n            ? Array.isArray(value)\n                ? value.map((item) => ({ name: item })) : [{ name: value }]\n            : []\n}));\n\nexport const onDeleteFilter = (activeFilters, itemsToRemove) => {\n    const currItem = itemsToRemove[0];\n    return {\n        ...activeFilters,\n        [currItem?.chipKey]: {\n            ...(activeFilters[currItem?.chipKey] || {}),\n            value: Array.isArray(activeFilters[currItem?.chipKey]?.value)\n                ? activeFilters[currItem?.chipKey]?.value?.filter(\n                    (item) => !currItem?.chips?.find(({ name }) => name === item)\n                  )\n                : ''\n        }\n    };\n};\n\nclass SystemRecommendations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            perPage: 10,\n            inventoryId: props.inventoryId,\n            activeFilters: defaultFilters\n        };\n        // Note that 800 is used widely accross platform\n        this.debouncedThrottleHandleChange = debounce(\n            this.throttleHandleChange.bind(this), 800\n        );\n\n    }\n\n    async componentDidMount() {\n        await this.requestLoadSysRecs();\n    }\n\n    async throttleHandleChange(options) {\n        await this.requestLoadSysRecs(options);\n    }\n\n    async requestLoadSysRecs(options = {}) {\n        const params = {\n            page: this.state.page,\n            perPage: this.state.perPage,\n            description: this.state?.descriptionFilter,\n            ...options\n        };\n        await this.props.loadSysRecs(this.state.inventoryId, params);\n    }\n\n    applyFilters(filters) {\n        this.setState({\n            activeFilters: filters,\n            descriptionFilter: filters?.name?.value,\n            page: 1\n        });\n        this.debouncedThrottleHandleChange({\n            description: filters?.name?.value,\n            page: 1\n        });\n    }\n\n    async updatePagination(pagination) {\n        this.setState(pagination);\n        await this.requestLoadSysRecs(pagination);\n    }\n\n    render() {\n        const { totalRecs, recsData  } = this.props;\n        const { page, perPage } = this.state;\n        return (\n            <Suspense fallback=\"\">\n                <Stack>\n                    <StackItem>\n                        <Card>\n                            <CardHeader><Title headingLevel=\"h1\">Recommendations</Title></CardHeader>\n                            <CardBody>\n                                <PrimaryToolbar className=\"ros-primary-toolbar\" pagination={{\n                                    page: (totalRecs === 0 ? 0 : page),\n                                    perPage,\n                                    itemCount: (totalRecs ? totalRecs : 0),\n                                    onSetPage: (_e, page) => this.updatePagination({ page, perPage: this.state.perPage }),\n                                    onPerPageSelect: (_e, perPage) => this.updatePagination({ page: 1, perPage }),\n                                    isCompact: true,\n                                    widgetId: 'ros-pagination-top'\n                                }}\n                                filterConfig={{\n                                    items: [{\n                                        label: defaultFilters.name.label,\n                                        type: 'text',\n                                        filterValues: {\n                                            key: 'text-filter',\n                                            onChange: (event, value) => {\n                                                const activeFilters = {\n                                                    ...this.state.activeFilters,\n                                                    name: {\n                                                        ...(this.state.activeFilters?.name || {}),\n                                                        value\n                                                    }\n                                                };\n                                                this.applyFilters(activeFilters);\n                                            },\n                                            value: this.state.activeFilters?.name?.value || '',\n                                            placeholder: 'Filter by name'\n                                        }\n                                    }]\n                                }}\n                                activeFiltersConfig={{\n                                    filters: isEmptyFilters(this.state.activeFilters)\n                                        ? constructActiveFilters(this.state.activeFilters)\n                                        : [],\n                                    onDelete: (event, itemsToRemove, isAll) => {\n                                        if (isAll) {\n                                            this.applyFilters(defaultFilters);\n                                        } else {\n                                            const filtersOnDeletion = onDeleteFilter(this.state.activeFilters, itemsToRemove);\n                                            this.applyFilters(filtersOnDeletion);\n                                        }\n                                    }\n                                }}\n                                />\n                                { (!this.props.loading) ? (<RecommendationsTable recommendations = { recsData }/>) : null }\n                                <TableToolbar>\n                                    <Pagination\n                                        itemCount={ totalRecs ? totalRecs : 0 }\n                                        widgetId='ros-pagination-bottom'\n                                        page={ totalRecs === 0 ? 0 : page }\n                                        perPage={ perPage }\n                                        variant='bottom'\n                                        onSetPage={(_e, page) => this.updatePagination({ page, perPage: this.state.perPage })}\n                                        onPerPageSelect={(_e, perPage) => this.updatePagination({ page: 1, perPage })}\n                                    />\n                                </TableToolbar>\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                </Stack>\n            </Suspense>\n        );\n    }\n}\n\nSystemRecommendations.propTypes = {\n    inventoryId: PropTypes.string,\n    loading: PropTypes.bool,\n    recsData: PropTypes.array,\n    totalRecs: PropTypes.number,\n    loadSysRecs: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        loading: state.systemRecsReducer?.loading,\n        recsData: state.systemRecsReducer?.recommendationsData,\n        totalRecs: state.systemRecsReducer?.totalRecommendations,\n        ...props\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadSysRecs: (uuid, params = {}) => dispatch(loadSysRecs(uuid, params))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SystemRecommendations);\n"],"sourceRoot":""}