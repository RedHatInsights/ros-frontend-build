{"version":3,"sources":["webpack://ros-frontend/./src/Components/SystemDetail/SystemRecommendations.js"],"names":["RecommendationsTable","asyncComponent","SystemRecommendations","props","state","page","perPage","inventoryId","match","params","this","loadSysRecs","pagination","setState","totalRecs","recsData","Suspense","fallback","Card","headingLevel","className","itemCount","onSetPage","_e","updatePagination","onPerPageSelect","isCompact","widgetId","loading","recommendations","variant","React","propTypes","PropTypes","withRouter","connect","systemRecsReducer","recommendationsData","totalRecommendations","dispatch","uuid"],"mappings":"orBAkBA,IAAMA,GAAuBC,E,SAAAA,IAAe,kBAAM,2EAS5CC,E,wbACF,WAAYC,GAAO,0BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EACNC,QAAS,GACTC,YAAaJ,EAAMK,MAAMC,OAAOF,aALrB,E,4JAUTG,KAAKP,MAAMQ,YAAYD,KAAKN,MAAMG,YACpC,CAAEF,KAAMK,KAAKN,MAAMC,KAAMC,QAASI,KAAKN,MAAME,U,uJAI9BM,G,wEACnBF,KAAKG,SAASD,G,SACRF,KAAKP,MAAMQ,YAAYD,KAAKN,MAAMG,YAAaK,G,6HAGhD,aAC4BF,KAAKP,MAA9BW,EADH,EACGA,UAAWC,EADd,EACcA,SADd,EAEqBL,KAAKN,MAAvBC,EAFH,EAEGA,KAAMC,EAFT,EAESA,QACd,OACI,kBAAC,EAAAU,SAAD,CAAUC,SAAS,IACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAAC,KAAD,KACI,kBAAC,IAAD,KAAY,kBAAC,KAAD,CAAOC,aAAa,MAApB,oBACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBC,UAAU,sBAAsBR,WAAY,CACxDP,KAAqB,IAAdS,EAAkB,EAAIT,EAC7BC,UACAe,UAAYP,GAAwB,EACpCQ,UAAW,SAACC,EAAIlB,GAAL,OAAc,EAAKmB,iBAAiB,CAAEnB,OAAMC,QAAS,EAAKF,MAAME,WAC3EmB,gBAAiB,SAACF,EAAIjB,GAAL,OAAiB,EAAKkB,iBAAiB,CAAEnB,KAAM,EAAGC,aACnEoB,WAAW,EACXC,SAAU,wBAGVjB,KAAKP,MAAMyB,QAAsE,KAA1D,kBAAC5B,EAAD,CAAsB6B,gBAAoBd,IACrE,kBAAC,IAAD,KACI,kBAAC,KAAD,CACIM,UAAYP,GAAwB,EACpCa,SAAS,wBACTtB,KAAqB,IAAdS,EAAkB,EAAIT,EAC7BC,QAAUA,EACVwB,QAAQ,SACRR,UAAW,SAACC,EAAIlB,GAAL,OAAc,EAAKmB,iBAAiB,CAAEnB,OAAMC,QAAS,EAAKF,MAAME,WAC3EmB,gBAAiB,SAACF,EAAIjB,GAAL,OAAiB,EAAKkB,iBAAiB,CAAEnB,KAAM,EAAGC,yB,GAlDvEyB,eA+DpC7B,EAAsB8B,UAAY,CAC9BxB,MAAOyB,QACPL,QAASK,SACTlB,SAAUkB,UACVnB,UAAWmB,WACXtB,YAAasB,UAkBjB,SAAeC,iBACXC,cAhBoB,SAAC/B,EAAOD,GAAU,UACtC,O,iWAAA,EACIyB,QAAO,UAAExB,EAAMgC,yBAAR,aAAE,EAAyBR,QAClCb,SAAQ,UAAEX,EAAMgC,yBAAR,aAAE,EAAyBC,oBACnCvB,UAAS,UAAEV,EAAMgC,yBAAR,aAAE,EAAyBE,sBACjCnC,MAIX,SAA4BoC,GACxB,MAAO,CACH5B,YAAa,SAAC6B,GAAD,IAAO/B,EAAP,uDAAgB,GAAhB,OAAuB8B,GAAS5B,OAAY6B,EAAM/B,QAKnE0B,CAGEjC","file":"js/23.0bef91a9108aabe0643c.js","sourcesContent":["import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { loadSysRecs } from '../../store/actions';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Title,\n    Stack,\n    StackItem,\n    Pagination\n} from '@patternfly/react-core';\n\nimport asyncComponent from '../../Utilities/asyncComponent';\nconst RecommendationsTable = asyncComponent(() => import('./RecommendationsTable'));\n\n/**\n * This is a dumb component that only recieves properties from a smart component.\n * Dumb components are usually functions and not classes.\n *\n * @param props the props given by the smart component.\n */\n\nclass SystemRecommendations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            perPage: 10,\n            inventoryId: props.match.params.inventoryId\n        };\n    }\n\n    async componentDidMount() {\n        await this.props.loadSysRecs(this.state.inventoryId,\n            { page: this.state.page, perPage: this.state.perPage }\n        );\n    }\n\n    async updatePagination(pagination) {\n        this.setState(pagination);\n        await this.props.loadSysRecs(this.state.inventoryId, pagination);\n    }\n\n    render() {\n        const { totalRecs, recsData  } = this.props;\n        const { page, perPage } = this.state;\n        return (\n            <Suspense fallback=\"\">\n                <Stack>\n                    <StackItem>\n                        <Card>\n                            <CardHeader><Title headingLevel=\"h1\">Recommendations</Title></CardHeader>\n                            <CardBody>\n                                <PrimaryToolbar className=\"ros-primary-toolbar\" pagination={{\n                                    page: (totalRecs === 0 ? 0 : page),\n                                    perPage,\n                                    itemCount: (totalRecs ? totalRecs : 0),\n                                    onSetPage: (_e, page) => this.updatePagination({ page, perPage: this.state.perPage }),\n                                    onPerPageSelect: (_e, perPage) => this.updatePagination({ page: 1, perPage }),\n                                    isCompact: true,\n                                    widgetId: 'ros-pagination-top'\n                                }}\n                                />\n                                { (!this.props.loading) ? (<RecommendationsTable recommendations = { recsData }/>) : null }\n                                <TableToolbar>\n                                    <Pagination\n                                        itemCount={ totalRecs ? totalRecs : 0 }\n                                        widgetId='ros-pagination-bottom'\n                                        page={ totalRecs === 0 ? 0 : page }\n                                        perPage={ perPage }\n                                        variant='bottom'\n                                        onSetPage={(_e, page) => this.updatePagination({ page, perPage: this.state.perPage })}\n                                        onPerPageSelect={(_e, perPage) => this.updatePagination({ page: 1, perPage })}\n                                    />\n                                </TableToolbar>\n\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                </Stack>\n            </Suspense>\n        );\n    }\n}\n\nSystemRecommendations.propTypes = {\n    match: PropTypes.any,\n    loading: PropTypes.bool,\n    recsData: PropTypes.array,\n    totalRecs: PropTypes.number,\n    loadSysRecs: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        loading: state.systemRecsReducer?.loading,\n        recsData: state.systemRecsReducer?.recommendationsData,\n        totalRecs: state.systemRecsReducer?.totalRecommendations,\n        ...props\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadSysRecs: (uuid, params = {}) => dispatch(loadSysRecs(uuid, params))\n    };\n}\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(SystemRecommendations)\n);\n"],"sourceRoot":""}