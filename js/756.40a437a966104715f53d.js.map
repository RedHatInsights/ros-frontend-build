{"version":3,"sources":["webpack://ros-frontend/./src/Components/SystemDetail/SystemRecommendations.js","webpack://ros-frontend/./src/Utilities/asyncComponent.js"],"names":["importComponent","RecommendationsTable","props","state","component","this","setState","C","Skeleton","Component","defaultFilters","name","label","value","isEmptyFilters","activeFilters","Object","values","find","item","length","constructActiveFilters","entries","map","key","category","chipKey","chips","Array","isArray","onDeleteFilter","itemsToRemove","currItem","filter","SystemRecommendations","page","perPage","inventoryId","debouncedThrottleHandleChange","debounce","throttleHandleChange","bind","requestLoadSysRecs","options","params","description","descriptionFilter","loadSysRecs","filters","pagination","totalRecs","recsData","Suspense","fallback","Stack","hasGutter","StackItem","Title","headingLevel","size","Card","CardBody","PrimaryToolbar","className","itemCount","onSetPage","_e","updatePagination","onPerPageSelect","isCompact","widgetId","filterConfig","items","type","filterValues","onChange","event","applyFilters","placeholder","activeFiltersConfig","onDelete","isAll","filtersOnDeletion","loading","recommendations","TableToolbar","Pagination","variant","React","propTypes","PropTypes","connect","systemRecsReducer","recommendationsData","totalRecommendations","dispatch","uuid"],"mappings":"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","file":"js/756.40a437a966104715f53d.js","sourcesContent":["import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { loadSysRecs } from '../../store/actions';\nimport {\n    Card,\n    CardBody,\n    Title,\n    Stack,\n    StackItem,\n    Pagination\n} from '@patternfly/react-core';\nimport debounce from 'lodash/debounce';\nimport asyncComponent from '../../Utilities/asyncComponent';\nconst RecommendationsTable = asyncComponent(() => import('./RecommendationsTable'));\n\n/**\n * This is a dumb component that only recieves properties from a smart component.\n * Dumb components are usually functions and not classes.\n *\n * @param props the props given by the smart component.\n */\nconst defaultFilters = {\n    name: {\n        label: 'Name',\n        value: ''\n    }\n};\n\nexport const isEmptyFilters = (activeFilters) => Object.values(activeFilters).find(\n    (item) => item?.value?.length > 0 || item?.length > 0\n);\n\nexport const constructActiveFilters = (activeFilters) => Object.entries(activeFilters).map(([key, { label, value } = {}]) => ({\n    category: label,\n    chipKey: key,\n    chips:\n        value?.length > 0\n            ? Array.isArray(value)\n                ? value.map((item) => ({ name: item })) : [{ name: value }]\n            : []\n}));\n\nexport const onDeleteFilter = (activeFilters, itemsToRemove) => {\n    const currItem = itemsToRemove[0];\n    return {\n        ...activeFilters,\n        [currItem?.chipKey]: {\n            ...(activeFilters[currItem?.chipKey] || {}),\n            value: Array.isArray(activeFilters[currItem?.chipKey]?.value)\n                ? activeFilters[currItem?.chipKey]?.value?.filter(\n                    (item) => !currItem?.chips?.find(({ name }) => name === item)\n                  )\n                : ''\n        }\n    };\n};\n\nclass SystemRecommendations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            perPage: 10,\n            inventoryId: props.inventoryId,\n            activeFilters: defaultFilters\n        };\n        // Note that 800 is used widely accross platform\n        this.debouncedThrottleHandleChange = debounce(\n            this.throttleHandleChange.bind(this), 800\n        );\n\n    }\n\n    async componentDidMount() {\n        await this.requestLoadSysRecs();\n    }\n\n    async throttleHandleChange(options) {\n        await this.requestLoadSysRecs(options);\n    }\n\n    async requestLoadSysRecs(options = {}) {\n        const params = {\n            page: this.state.page,\n            perPage: this.state.perPage,\n            description: this.state?.descriptionFilter,\n            ...options\n        };\n        await this.props.loadSysRecs(this.state.inventoryId, params);\n    }\n\n    applyFilters(filters) {\n        this.setState({\n            activeFilters: filters,\n            descriptionFilter: filters?.name?.value,\n            page: 1\n        });\n        this.debouncedThrottleHandleChange({\n            description: filters?.name?.value,\n            page: 1\n        });\n    }\n\n    async updatePagination(pagination) {\n        this.setState(pagination);\n        await this.requestLoadSysRecs(pagination);\n    }\n\n    render() {\n        const { totalRecs, recsData  } = this.props;\n        const { page, perPage } = this.state;\n        return (\n            <Suspense fallback=\"\">\n                <Stack hasGutter>\n                    <StackItem>\n                        <Title headingLevel=\"h3\" size=\"2xl\">\n                            Recommendations\n                        </Title>\n                    </StackItem>\n                    <StackItem>\n                        <Card>\n                            <CardBody>\n                                <PrimaryToolbar className=\"ros-primary-toolbar\" pagination={{\n                                    page: (totalRecs === 0 ? 0 : page),\n                                    perPage,\n                                    itemCount: (totalRecs ? totalRecs : 0),\n                                    onSetPage: (_e, page) => this.updatePagination({ page, perPage: this.state.perPage }),\n                                    onPerPageSelect: (_e, perPage) => this.updatePagination({ page: 1, perPage }),\n                                    isCompact: true,\n                                    widgetId: 'ros-pagination-top'\n                                }}\n                                filterConfig={{\n                                    items: [{\n                                        label: defaultFilters.name.label,\n                                        type: 'text',\n                                        filterValues: {\n                                            key: 'text-filter',\n                                            onChange: (event, value) => {\n                                                const activeFilters = {\n                                                    ...this.state.activeFilters,\n                                                    name: {\n                                                        ...(this.state.activeFilters?.name || {}),\n                                                        value\n                                                    }\n                                                };\n                                                this.applyFilters(activeFilters);\n                                            },\n                                            value: this.state.activeFilters?.name?.value || '',\n                                            placeholder: 'Filter by name'\n                                        }\n                                    }]\n                                }}\n                                activeFiltersConfig={{\n                                    filters: isEmptyFilters(this.state.activeFilters)\n                                        ? constructActiveFilters(this.state.activeFilters)\n                                        : [],\n                                    onDelete: (event, itemsToRemove, isAll) => {\n                                        if (isAll) {\n                                            this.applyFilters(defaultFilters);\n                                        } else {\n                                            const filtersOnDeletion = onDeleteFilter(this.state.activeFilters, itemsToRemove);\n                                            this.applyFilters(filtersOnDeletion);\n                                        }\n                                    }\n                                }}\n                                />\n                                { (!this.props.loading) ? (<RecommendationsTable recommendations = { recsData }/>) : null }\n                                <TableToolbar>\n                                    <Pagination\n                                        itemCount={ totalRecs ? totalRecs : 0 }\n                                        widgetId='ros-pagination-bottom'\n                                        page={ totalRecs === 0 ? 0 : page }\n                                        perPage={ perPage }\n                                        variant='bottom'\n                                        onSetPage={(_e, page) => this.updatePagination({ page, perPage: this.state.perPage })}\n                                        onPerPageSelect={(_e, perPage) => this.updatePagination({ page: 1, perPage })}\n                                    />\n                                </TableToolbar>\n                            </CardBody>\n                        </Card>\n                    </StackItem>\n                </Stack>\n            </Suspense>\n        );\n    }\n}\n\nSystemRecommendations.propTypes = {\n    inventoryId: PropTypes.string,\n    loading: PropTypes.bool,\n    recsData: PropTypes.array,\n    totalRecs: PropTypes.number,\n    loadSysRecs: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        loading: state.systemRecsReducer?.loading,\n        recsData: state.systemRecsReducer?.recommendationsData,\n        totalRecs: state.systemRecsReducer?.totalRecommendations,\n        ...props\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadSysRecs: (uuid, params = {}) => dispatch(loadSysRecs(uuid, params))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SystemRecommendations);\n","import React, { Component } from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/Skeleton';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <Skeleton />;\n        }\n    }\n\n    return AsyncComponent;\n}\n"],"sourceRoot":""}