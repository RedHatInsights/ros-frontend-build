{"version":3,"file":"js/RosSuggestedInstance.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-icon.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/NotAuthorized/NotAuthorized.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotAuthorized/NotAuthorized.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Components/ServiceNotConfigured/ServiceNotConfigured.js","webpack:///./src/Components/NoEntitiesFound/NoEntitiesFound.js","webpack:///./src/Components/InstanceTypes/SuggestedInstanceTypesTable.js","webpack:///./src/Routes/RosSuggestedInstanceTypes/RosSuggestedInstanceTypes.js","webpack:///./src/Utilities/api.js","webpack:///./src/store/actions.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state.mjs';\nexport const EmptyStateActions = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateActions, className) }, props), children));\n};\nEmptyStateActions.displayName = 'EmptyStateActions';\n//# sourceMappingURL=EmptyStateActions.js.map","import { createIcon } from '../createIcon';\n\nexport const LockIconConfig = {\n  name: 'LockIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockIcon = createIcon(LockIconConfig);\n\nexport default LockIcon;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter, EmptyStateActions, ButtonVariant, } from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nconst NotAuthorized = (_a) => {\n    var { prevPageButtonText = 'Return to previous page', toLandingPageText = 'Go to landing page', toLandingPageUrl = \".\", primaryAction = null, secondaryActions = null, serviceName, title = `You do not have access to ${serviceName}`, icon: Icon = LockIcon, description = 'Contact your system administrator(s) for more information.', showReturnButton = true, className } = _a, props = __rest(_a, [\"prevPageButtonText\", \"toLandingPageText\", \"toLandingPageUrl\", \"primaryAction\", \"secondaryActions\", \"serviceName\", \"title\", \"icon\", \"description\", \"showReturnButton\", \"className\"]);\n    return (React.createElement(EmptyState, Object.assign({ variant: EmptyStateVariant.full, className: className }, props),\n        React.createElement(EmptyStateHeader, { titleText: React.createElement(React.Fragment, null, title), icon: React.createElement(EmptyStateIcon, { icon: Icon }), headingLevel: \"h5\" }),\n        React.createElement(EmptyStateBody, null, description),\n        React.createElement(EmptyStateFooter, null,\n            primaryAction ? React.createElement(EmptyStateActions, null, primaryAction) : null,\n            showReturnButton && !primaryAction &&\n                (document.referrer ? (React.createElement(Button, { variant: ButtonVariant.primary, onClick: () => history.back() }, prevPageButtonText)) : (React.createElement(Button, { variant: ButtonVariant.primary, component: \"a\", href: toLandingPageUrl }, toLandingPageText))),\n            React.createElement(EmptyStateActions, null, secondaryActions ? React.createElement(EmptyStateActions, null, secondaryActions) : null))));\n};\nexport default NotAuthorized;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport NotAuthorizedPF from '@patternfly/react-component-groups/dist/dynamic/NotAuthorized';\nvar NotAuthorized = function (_a) {\n    var _b = _a.description, description = _b === void 0 ? (_jsxs(_Fragment, { children: [\"Contact your organization administrator(s) for more information or visit\\u00A0\", _jsx(\"a\", { href: \"./iam/my-user-access\", children: \"My User Access\" }), \"\\u00A0to learn more about your permissions.\"] })) : _b, props = __rest(_a, [\"description\"]);\n    return _jsx(NotAuthorizedPF, __assign({}, props, { description: description }));\n};\nexport default NotAuthorized;\n//# sourceMappingURL=NotAuthorized.js.map","import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-v5-l-page-header', 'pf-v5-c-page-header', 'pf-v5-l-page__main-section', 'pf-v5-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\", children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title, TitleProps } from \"@patternfly/react-core/dist/dynamic/components/Title\";\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, { headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\", children: title }));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import React, { Suspense } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nexport const ServiceNotConfigured = () => (\n    <Suspense fallback={<Bullseye>\n        <Spinner />\n    </Bullseye>}>\n        <AsynComponent\n            appId=\"ros_zero_state\"\n            appName=\"dashboard\"\n            module=\"./AppZeroState\"\n            scope=\"dashboard\"\n            ErrorComponent={<ErrorState />}\n            app=\"Resource_Optimization\"\n        />\n    </Suspense>\n);\n","import React from 'react';\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    EmptyStateActions, EmptyStateHeader, EmptyStateFooter\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { GETTING_STARTED_DOC } from '../../constants';\n\nexport default function NoEntitiesFound() {\n    return (\n        <EmptyState variant={EmptyStateVariant.lg}>\n            <EmptyStateHeader titleText=\"No suggested instance types found\"\n                icon={<EmptyStateIcon icon={CheckCircleIcon} color='green'/>} headingLevel=\"h5\" />\n            <EmptyStateBody>\n                {/* eslint-disable-next-line max-len */}\n                All the systems that are sending data are optimized. Visit getting started documentation to add more systems to Resource Optimization to see more suggestions.\n            </EmptyStateBody><EmptyStateFooter>\n                <EmptyStateActions>\n                    <Button component='a' variant='primary' href={GETTING_STARTED_DOC} target='_blank'>Getting started documentation</Button>\n                </EmptyStateActions>\n            </EmptyStateFooter></EmptyState>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    TableVariant,\n    Table /* data-codemods */,\n    Thead, Tr, Th, Tbody, Td, SortByDirection\n} from '@patternfly/react-table';\nimport {\n    Card,\n    Spinner,\n    Bullseye,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { PAGE, PER_PAGE } from '../../constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadSuggestedInstanceTypes } from '../../store/actions';\nimport { SUGG_INSTANCE_TYPES_TABLE_COLUMNS } from '../../constants';\n\nexport default function SuggestedInstanceTypesTable() {\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(PAGE);\n    const [perPage, setPerPage] = useState(PER_PAGE);\n    const [activeSortIndex, setActiveSortIndex] = useState(3);\n    const [activeSortColumnKey, setActiveSortColumnKey] = useState('system_count');\n    const [activeSortDirection, setActiveSortDirection] = useState(SortByDirection.desc);\n    const [instanceTypeName, setInstanceTypeName] = useState('');\n    const { loading, instances, count, serverError } = useSelector((state) => state.suggestedInstanceTypesReducer);\n\n    const onSetPage = (event, page) => setPage(page);\n    const onPerPageSelect = (event, perPage) => {\n        setPerPage(perPage);\n        setPage(PAGE);\n    };\n\n    useEffect(() =>{\n        dispatch(loadSuggestedInstanceTypes({\n            page, perPage, activeSortDirection, activeSortColumnKey, instanceTypeName\n        }));\n    }, [\n        page,\n        perPage,\n        activeSortDirection,\n        activeSortColumnKey,\n        instanceTypeName\n    ]);\n\n    const getSortParams = (columnIndex, key) => ({\n        sortBy: {\n            index: activeSortIndex,\n            direction: activeSortDirection\n        },\n        onSort: (event, index, direction) => {\n            setActiveSortIndex(index);\n            setActiveSortDirection(direction);\n            setActiveSortColumnKey(key);\n        },\n        columnIndex\n    });\n\n    const activeFilters = () => {\n        return instanceTypeName.length\n            ? [{ category: 'Instance Types', chips: [{ name: instanceTypeName }] }]\n            : [];\n    };\n\n    return (\n        <>\n            <section className='pf-v5-l-page__main-section pf-v5-c-page__main-section'>\n                <Card>\n                    <CardBody>\n                        <PrimaryToolbar\n                            pagination={{\n                                itemCount: count,\n                                page,\n                                perPage,\n                                onSetPage,\n                                onPerPageSelect\n                            }}\n                            filterConfig={{\n                                items: [{\n                                    label: 'instance types',\n                                    type: 'text',\n                                    filterValues: {\n                                        onChange: (e, value) => setInstanceTypeName(value),\n                                        value: instanceTypeName\n                                    }\n                                }]\n                            }}\n                            activeFiltersConfig={{\n                                deleteTitle: 'Reset filters',\n                                filters: activeFilters(),\n                                onDelete: () => setInstanceTypeName('')\n                            }}\n                        />\n                        { serverError.message ? <ErrorState/> :\n                            !loading ? <Table\n                                aria-label='suggested instance types table'\n                                variant={TableVariant.compact}\n                            >\n                                <Thead noWrap>\n                                    <Tr>\n                                        {\n                                            SUGG_INSTANCE_TYPES_TABLE_COLUMNS.map((columnDetails, index) => {\n                                                if (!columnDetails.isSortable) {\n                                                    return <Th key={columnDetails.key}>{columnDetails.title}</Th>;\n                                                }\n\n                                                return <Th key={columnDetails.key} sort={getSortParams(index, columnDetails.key)}>\n                                                    {columnDetails.title}</Th>;\n                                            })\n                                        }\n                                    </Tr>\n                                </Thead>\n                                <Tbody>\n                                    {\n                                        instances.map(instance => {\n                                            return (\n                                                <Tr key={instance.instance_type}>\n                                                    <Td>{instance.instance_type}</Td>\n                                                    <Td>{instance.cloud_provider}</Td>\n                                                    <Td>{instance.description}</Td>\n                                                    <Td>{instance.system_count}</Td>\n                                                </Tr>\n                                            );\n                                        })\n                                    }\n                                </Tbody>\n                            </Table> : (\n                                <Bullseye>\n                                    <Spinner/>\n                                </Bullseye>\n                            )}\n                        <Pagination\n                            itemCount={count}\n                            page={page}\n                            perPage={perPage}\n                            onSetPage={onSetPage}\n                            onPerPageSelect={onPerPageSelect}\n                            variant={PaginationVariant.bottom}\n                            widgetId=\"pagination-options-menu-bottom\"\n                        />\n                    </CardBody>\n                </Card>\n            </section>\n        </>\n    );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { PermissionContext } from '../../App';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport {\n    Spinner,\n    Bullseye\n} from '@patternfly/react-core';\nimport { SERVICE_NAME } from '../../constants';\nimport {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ServiceNotConfigured } from '../../Components/ServiceNotConfigured/ServiceNotConfigured';\nimport { loadIsConfiguredInfo } from '../../store/actions';\nimport NoEntitiesFound from '../../Components/NoEntitiesFound/NoEntitiesFound';\nimport SuggestedInstanceTypesTable from  '../../Components/InstanceTypes/SuggestedInstanceTypesTable';\n\nconst SuggestedInstance = () => {\n    const dispatch = useDispatch();\n    const { loading, showConfigSteps, systemWithSuggestions, serverError } = useSelector((state) => state.isConfiguredReducer);\n    const hasSuggestedInstances = systemWithSuggestions !== 0;\n\n    useEffect(() => {\n        dispatch(loadIsConfiguredInfo());\n    }, []);\n\n    return (\n        showConfigSteps\n            ? <ServiceNotConfigured />\n            : (\n                <>\n                    <PageHeader>\n                        <PageHeaderTitle title='Suggested Instance Types'/>\n                    </PageHeader>\n                    {\n                        serverError.message ?\n                            <ErrorState/> :\n                            !loading ?\n                                (\n                                    hasSuggestedInstances\n                                        ? <SuggestedInstanceTypesTable />\n                                        : <NoEntitiesFound />\n                                ) : (\n                                    <Bullseye>\n                                        <Spinner />\n                                    </Bullseye>\n                                )\n\n                    }\n                </>\n            )\n    );\n};\n\nexport default function RosSuggestedInstanceTypes() {\n    const hasPermissions = useContext(PermissionContext).permissions.hasRead;\n    const { hideGlobalFilter, updateDocumentTitle } = useChrome();\n\n    useEffect(() => {\n        updateDocumentTitle('Suggested Instance Types - Resource Optimization - Business ');\n        hideGlobalFilter();\n    }, []);\n\n    return (\n        hasPermissions\n            ? <SuggestedInstance />\n            : <NotAuthorized serviceName={SERVICE_NAME} />\n    );\n}\n\n","import { SortByDirection } from '@patternfly/react-table';\nimport { ROS_API_ROOT, SYSTEMS_API_ROOT, IS_CONFIGURED_API, CRC_PDF_GENERATE_API, SUGGESTED_INSTANCE_TYPES_API } from '../constants';\n\nexport function handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n\n    return response;\n}\n\nexport const isROSConfigured = () => {\n    let url = new URL(\n        ROS_API_ROOT + IS_CONFIGURED_API,\n        window.location.origin\n    );\n    let response = fetch(url).then(handleErrors)\n    .then(res =>  res.json()).then(result => result);\n\n    return response;\n};\n\nexport const fetchSystemDetail = inventoryId => {\n    let url = new URL(\n        ROS_API_ROOT + SYSTEMS_API_ROOT + `/${inventoryId}`,\n        window.location.origin\n    );\n    let response = fetch(url).then(handleErrors)\n    .then(res =>  res.json()).then(result => result);\n\n    return response;\n};\n\nexport const fetchSystemRecommendations = (inventoryId, options = {}) => {\n    let params = {\n        limit: options.perPage,\n        offset: (options.page - 1) * options.perPage\n    };\n    if (options.description && options.description.trim()) {\n        params = { ...params, description: options.description };\n    }\n\n    let url = new URL(\n        ROS_API_ROOT + SYSTEMS_API_ROOT + `/${inventoryId}/suggestions`,\n        window.location.origin\n    );\n    url.search = new URLSearchParams(params).toString();\n    let response = fetch(url).then((resp) => {\n        if (!resp.ok && resp.status === 404) {\n            return { hasError: true };\n        } else if (!resp.ok) {\n            throw Error(resp.statusText);\n        }\n\n        return resp.json();\n    })\n    .then(result => result);\n\n    return response;\n};\n\nexport const fetchSystems = async (fetchParams) => {\n    const { perPage, orderBy, orderHow  } = fetchParams || {};\n\n    const sortingHeader = {\n        display_name: 'display_name', /* eslint-disable-line camelcase */\n        groups: 'group_name', /* eslint-disable-line camelcase */\n        os: 'os',\n        'performance_utilization.cpu': 'cpu',\n        'performance_utilization.memory': 'memory',\n        'performance_utilization.max_io': 'max_io',\n        number_of_suggestions: 'number_of_suggestions', /* eslint-disable-line camelcase */\n        state: 'state',\n        report_date: 'report_date' /* eslint-disable-line camelcase */\n    };\n\n    let params = {\n        order_by: sortingHeader[orderBy] || 'report_date', /* eslint-disable-line camelcase */\n        order_how: orderHow || SortByDirection.desc, /* eslint-disable-line camelcase */\n        limit: perPage ? perPage : -1,\n        ...fetchParams?.page && {\n            offset: (fetchParams.page - 1) * fetchParams.perPage\n        },\n        ...fetchParams?.filters?.hostnameOrId && {\n            display_name: fetchParams.filters.hostnameOrId /* eslint-disable-line camelcase */\n        }\n    };\n\n    let url = new URL(ROS_API_ROOT + SYSTEMS_API_ROOT,  window.location.origin);\n    let query = new URLSearchParams(params);\n    fetchParams?.stateFilter?.forEach((stateFilterValue) => {\n        query.append('state', stateFilterValue);\n    });\n    fetchParams?.osFilter?.forEach((osFilterValue) => {\n        query.append('os', osFilterValue);\n    });\n    fetchParams?.groupFilter?.forEach((groupFilterValue) => {\n        query.append('group_name', groupFilterValue);\n    });\n    url.search = query.toString();\n    return fetch(url).then((res) => {\n        if (!res.ok) {\n            throw Error(res.statusText);\n        }\n\n        return res;\n    }).then(res =>  res.json());\n};\n\nexport const fetchSystemHistory = (inventoryId, limit) => {\n    let url = new URL(\n        `${ROS_API_ROOT}${SYSTEMS_API_ROOT}/${inventoryId}/history`,\n        window.location.origin\n    );\n    let params = {\n        limit\n    };\n\n    let query = new URLSearchParams(params);\n    url.search = query.toString();\n\n    let response = fetch(url).then(handleErrors)\n    .then(res =>  res.json()).then(result => result);\n\n    return response;\n};\n\nexport const fetchExecutiveReport = async () => {\n    const url = new URL(CRC_PDF_GENERATE_API,  window.location.origin);\n\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify({\n            service: 'ros',\n            template: 'executiveReport'\n        })\n    })\n    .then(handleErrors)\n    .then((response) => response.blob());\n\n};\n\nexport const fetchSuggestedInstanceTypes = async (fetchParams) => {\n    const { page, perPage, activeSortColumnKey, activeSortDirection } = fetchParams || {};\n\n    let url = new URL(\n        ROS_API_ROOT + SUGGESTED_INSTANCE_TYPES_API,\n        window.location.origin\n    );\n\n    let params = {\n        page,\n        per_page: perPage, /* eslint-disable-line camelcase */\n        order_by: activeSortColumnKey, /* eslint-disable-line camelcase */\n        order_how: activeSortDirection, /* eslint-disable-line camelcase */\n        ...fetchParams?.instanceTypeName  && {\n            instance_type: fetchParams.instanceTypeName /* eslint-disable-line camelcase */\n        }\n    };\n\n    let query = new URLSearchParams(params);\n    url.search = query.toString();\n\n    let response = fetch(url).then(handleErrors)\n    .then(res =>  res.json()).then(result => result);\n    return response;\n};\n","import { fetchSystemDetail, fetchSystemRecommendations, isROSConfigured, fetchSuggestedInstanceTypes } from '../Utilities/api';\n\nexport const loadSystemInfo = inventoryId => ({\n    type: 'LOAD_ROS_SYSTEM_INFO',\n    payload: fetchSystemDetail(inventoryId)\n});\n\nexport const loadSysRecs = (inventoryId, params) => ({\n    type: 'FETCH_SYSTEM_RECOMMENDATIONS_LIST',\n    payload: fetchSystemRecommendations(inventoryId, params)\n});\n\nexport const loadIsConfiguredInfo = () => ({\n    type: 'LOAD_IS_CONFIGURED_INFO',\n    payload: isROSConfigured()\n});\n\nexport const changeSystemColumns = (payload) =>({\n    type: 'CHANGE_SYSTEM_COLUMNS',\n    payload\n});\n\nexport const loadSuggestedInstanceTypes = (params) =>({\n    type: 'LOAD_SUGGESTED_INSTANCE_TYPES',\n    payload: fetchSuggestedInstanceTypes(params)\n});\n"],"names":["EmptyStateActions","_a","children","className","props","__rest","Object","assign","emptyStateActions","displayName","LockIcon","name","height","width","svgPath","yOffset","xOffset","prevPageButtonText","toLandingPageText","toLandingPageUrl","primaryAction","secondaryActions","serviceName","title","icon","Icon","description","showReturnButton","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","EmptyState","variant","full","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","EmptyStateFooter","document","referrer","Button","primary","onClick","history","back","component","href","__assign","n","arguments","apply","this","_b","pageHeaderClasses","Consumer","theme","themeClasses","concat","pageHeaderTitleClasses","Title","size","ServiceNotConfigured","Suspense","fallback","Bullseye","Spinner","A","appId","appName","module","scope","ErrorComponent","app","NoEntitiesFound","EmptyStateVariant","lg","color","target","SuggestedInstanceTypesTable","dispatch","page","setPage","useState","perPage","setPerPage","activeSortIndex","setActiveSortIndex","activeSortColumnKey","setActiveSortColumnKey","activeSortDirection","setActiveSortDirection","desc","instanceTypeName","setInstanceTypeName","loading","instances","count","serverError","state","suggestedInstanceTypesReducer","onSetPage","event","onPerPageSelect","useEffect","Card","CardBody","PrimaryToolbar","pagination","itemCount","filterConfig","items","label","type","filterValues","onChange","value","activeFiltersConfig","deleteTitle","filters","category","chips","onDelete","message","ErrorState","Table","compact","Thead","noWrap","Tr","map","columnDetails","index","isSortable","Th","key","sort","columnIndex","sortBy","direction","onSort","Tbody","instance","instance_type","Td","cloud_provider","system_count","Pagination","PaginationVariant","bottom","widgetId","SuggestedInstance","showConfigSteps","systemWithSuggestions","isConfiguredReducer","hasSuggestedInstances","PageHeader","PageHeaderTitle","RosSuggestedInstanceTypes","hasPermissions","useContext","permissions","hasRead","hideGlobalFilter","updateDocumentTitle","useChrome","NotAuthorized","handleErrors","response","ok","Error","statusText","isROSConfigured","url","URL","window","location","origin","fetch","then","res","json","result","fetchSystemDetail","inventoryId","fetchSystemRecommendations","options","params","limit","offset","trim","search","URLSearchParams","toString","resp","status","hasError","fetchSystems","async","fetchParams","orderBy","orderHow","order_by","display_name","groups","os","number_of_suggestions","report_date","order_how","hostnameOrId","query","stateFilter","forEach","stateFilterValue","append","osFilter","osFilterValue","groupFilter","groupFilterValue","fetchSystemHistory","fetchExecutiveReport","method","headers","body","JSON","stringify","service","template","blob","fetchSuggestedInstanceTypes","per_page","loadSystemInfo","payload","loadSysRecs","loadIsConfiguredInfo","changeSystemColumns","loadSuggestedInstanceTypes"],"sourceRoot":""}