{"version":3,"file":"js/948.1648040025676.387160044be6f0b6c32d.js","mappings":"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","sources":["webpack:///./src/Components/ServiceNotConfigured/ServiceNotConfigured.js","webpack:///./src/Components/SystemDetail/SystemRecommendations.js","webpack:///./src/Utilities/api.js","webpack:///./src/store/actions.js"],"sourcesContent":["import {\n    Bullseye, EmptyState, EmptyStateBody,\n    EmptyStateIcon, Title, Stack,\n    StackItem, Button\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { GETTING_STARTED_URL } from '../../constants';\nimport './ServiceNotConfigured.scss';\n\nexport const ServiceNotConfigured = () => (\n    <Bullseye>\n        <EmptyState className=\"empty-state-not-configured\">\n            <EmptyStateIcon icon={WrenchIcon} />\n            <Title headingLevel=\"h5\" size=\"lg\">\n              Resource optimization isn&apos;t configured yet\n            </Title>\n            <EmptyStateBody>\n                <Bullseye>\n                    <Stack hasGutter>\n                        <StackItem>\n                            Resource Optimization requires installing and configuring Performance Co-Pilot on\n                            the client system.\n                        </StackItem>\n                        <StackItem>\n                            Check the documentation to find how to configure Resource Optimization with Ansible. An\n                            alternative method which does not require Ansible is also described.\n                        </StackItem>\n                        <StackItem>\n                            After configuring Resource Optimization, it may take up to 24 hours until suggestions\n                            are available.\n                        </StackItem>\n                    </Stack>\n                </Bullseye>\n            </EmptyStateBody>\n            <Button\n                component=\"a\"\n                href={GETTING_STARTED_URL}\n                target=\"_blank\"\n                variant=\"primary\">\n                Getting started documentation\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n","import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { ServiceNotConfigured } from '../ServiceNotConfigured/ServiceNotConfigured';\nimport { loadSysRecs } from '../../store/actions';\nimport {\n    Card,\n    CardBody,\n    Title,\n    Stack,\n    StackItem,\n    Pagination\n} from '@patternfly/react-core';\nimport debounce from 'lodash/debounce';\nconst RecommendationsTable = React.lazy(() => import('./RecommendationsTable'));\n/**\n * This is a dumb component that only recieves properties from a smart component.\n * Dumb components are usually functions and not classes.\n *\n * @param props the props given by the smart component.\n */\nconst defaultFilters = {\n    name: {\n        label: 'Name',\n        value: ''\n    }\n};\n\nexport const isEmptyFilters = (activeFilters) => Object.values(activeFilters).find(\n    (item) => item?.value?.length > 0 || item?.length > 0\n);\n\nexport const constructActiveFilters = (activeFilters) => Object.entries(activeFilters).map(([key, { label, value } = {}]) => ({\n    category: label,\n    chipKey: key,\n    chips:\n        value?.length > 0\n            ? Array.isArray(value)\n                ? value.map((item) => ({ name: item })) : [{ name: value }]\n            : []\n}));\n\nexport const onDeleteFilter = (activeFilters, itemsToRemove) => {\n    const currItem = itemsToRemove[0];\n    return {\n        ...activeFilters,\n        [currItem?.chipKey]: {\n            ...(activeFilters[currItem?.chipKey] || {}),\n            value: Array.isArray(activeFilters[currItem?.chipKey]?.value)\n                ? activeFilters[currItem?.chipKey]?.value?.filter(\n                    (item) => !currItem?.chips?.find(({ name }) => name === item)\n                  )\n                : ''\n        }\n    };\n};\n\nclass SystemRecommendations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            perPage: 10,\n            inventoryId: props.inventoryId,\n            activeFilters: defaultFilters\n        };\n        // Note that 800 is used widely accross platform\n        this.debouncedThrottleHandleChange = debounce(\n            this.throttleHandleChange.bind(this), 800\n        );\n\n    }\n\n    async componentDidMount() {\n        await this.requestLoadSysRecs();\n    }\n\n    async throttleHandleChange(options) {\n        await this.requestLoadSysRecs(options);\n    }\n\n    async requestLoadSysRecs(options = {}) {\n        const params = {\n            page: this.state.page,\n            perPage: this.state.perPage,\n            description: this.state?.descriptionFilter,\n            ...options\n        };\n        await this.props.loadSysRecs(this.state.inventoryId, params);\n    }\n\n    applyFilters(filters) {\n        this.setState({\n            activeFilters: filters,\n            descriptionFilter: filters?.name?.value,\n            page: 1\n        });\n        this.debouncedThrottleHandleChange({\n            description: filters?.name?.value,\n            page: 1\n        });\n    }\n\n    async updatePagination(pagination) {\n        this.setState(pagination);\n        await this.requestLoadSysRecs(pagination);\n    }\n\n    render() {\n        const { totalRecs, recsData, emptyState  } = this.props;\n        const { page, perPage } = this.state;\n        return (\n            emptyState ? <ServiceNotConfigured/> : (\n                <Suspense fallback=\"\">\n                    <Stack hasGutter>\n                        <StackItem>\n                            <Title headingLevel=\"h3\" size=\"2xl\">\n                                Suggestions\n                            </Title>\n                        </StackItem>\n                        <StackItem>\n                            <Card>\n                                <CardBody>\n                                    <PrimaryToolbar className=\"ros-primary-toolbar\" pagination={{\n                                        page: (totalRecs === 0 ? 0 : page),\n                                        perPage,\n                                        itemCount: (totalRecs ? totalRecs : 0),\n                                        onSetPage: (_e, page) => this.updatePagination({ page, perPage: this.state.perPage }),\n                                        onPerPageSelect: (_e, perPage) => this.updatePagination({ page: 1, perPage }),\n                                        isCompact: true,\n                                        widgetId: 'ros-pagination-top'\n                                    }}\n                                    filterConfig={{\n                                        items: [{\n                                            label: defaultFilters.name.label,\n                                            type: 'text',\n                                            filterValues: {\n                                                key: 'text-filter',\n                                                onChange: (event, value) => {\n                                                    const activeFilters = {\n                                                        ...this.state.activeFilters,\n                                                        name: {\n                                                            ...(this.state.activeFilters?.name || {}),\n                                                            value\n                                                        }\n                                                    };\n                                                    this.applyFilters(activeFilters);\n                                                },\n                                                value: this.state.activeFilters?.name?.value || '',\n                                                placeholder: 'Filter by name'\n                                            }\n                                        }]\n                                    }}\n                                    activeFiltersConfig={{\n                                        filters: isEmptyFilters(this.state.activeFilters)\n                                            ? constructActiveFilters(this.state.activeFilters)\n                                            : [],\n                                        onDelete: (event, itemsToRemove, isAll) => {\n                                            if (isAll) {\n                                                this.applyFilters(defaultFilters);\n                                            } else {\n                                                const filtersOnDeletion = onDeleteFilter(this.state.activeFilters, itemsToRemove);\n                                                this.applyFilters(filtersOnDeletion);\n                                            }\n                                        }\n                                    }}\n                                    />\n                                    { (!this.props.loading) ? (<RecommendationsTable recommendations = { recsData }/>) : null }\n                                    <TableToolbar>\n                                        <Pagination\n                                            itemCount={ totalRecs ? totalRecs : 0 }\n                                            widgetId='ros-pagination-bottom'\n                                            page={ totalRecs === 0 ? 0 : page }\n                                            perPage={ perPage }\n                                            variant='bottom'\n                                            onSetPage={(_e, page) => this.updatePagination({ page, perPage: this.state.perPage })}\n                                            onPerPageSelect={(_e, perPage) => this.updatePagination({ page: 1, perPage })}\n                                        />\n                                    </TableToolbar>\n                                </CardBody>\n                            </Card>\n                        </StackItem>\n                    </Stack>\n                </Suspense>\n            )\n        );\n    }\n}\n\nSystemRecommendations.propTypes = {\n    inventoryId: PropTypes.string,\n    loading: PropTypes.bool,\n    recsData: PropTypes.array,\n    totalRecs: PropTypes.number,\n    loadSysRecs: PropTypes.func,\n    emptyState: PropTypes.bool\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        loading: state.systemRecsReducer?.loading,\n        recsData: state.systemRecsReducer?.recommendationsData,\n        totalRecs: state.systemRecsReducer?.totalRecommendations,\n        emptyState: state.systemRecsReducer?.emptyState,\n        ...props\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadSysRecs: (uuid, params = {}) => dispatch(loadSysRecs(uuid, params))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SystemRecommendations);\n","import { ROS_API_ROOT, SYSTEMS_API_ROOT, IS_CONFIGURED_API } from '../constants';\n\nexport function handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n\n    return response;\n}\n\nexport const isROSConfigured = () => {\n    let url = new URL(\n        ROS_API_ROOT + IS_CONFIGURED_API,\n        window.location.origin\n    );\n    let response = window.insights.chrome.auth\n    .getUser()\n    .then(() =>\n        fetch(url).then(handleErrors)\n        .then(res =>  res.json()).then(result => result)\n    );\n\n    return response;\n};\n\nexport const fetchSystemDetail = inventoryId => {\n    let url = new URL(\n        ROS_API_ROOT + SYSTEMS_API_ROOT + `/${inventoryId}`,\n        window.location.origin\n    );\n    let response = window.insights.chrome.auth\n    .getUser()\n    .then(() =>\n        fetch(url).then(handleErrors)\n        .then(res =>  res.json()).then(result => result)\n    );\n\n    return response;\n};\n\nexport const fetchSystemRecommendations = (inventoryId, options = {}) => {\n    let params = {\n        limit: options.perPage,\n        offset: (options.page - 1) * options.perPage\n    };\n    if (options.description && options.description.trim()) {\n        params = { ...params, description: options.description };\n    }\n\n    let url = new URL(\n        ROS_API_ROOT + SYSTEMS_API_ROOT + `/${inventoryId}/suggestions`,\n        window.location.origin\n    );\n    url.search = new URLSearchParams(params).toString();\n    let response = window.insights.chrome.auth\n    .getUser()\n    .then(() =>\n        fetch(url).then((resp) => {\n            if (!resp.ok && resp.status === 404) {\n                return { hasError: true };\n            } else if (!resp.ok) {\n                throw Error(resp.statusText);\n            }\n\n            return resp.json();\n        })\n        .then(result => result)\n    );\n\n    return response;\n};\n\n","import { fetchSystemDetail, fetchSystemRecommendations, isROSConfigured } from '../Utilities/api';\n\nexport const loadSystemInfo = inventoryId => ({\n    type: 'LOAD_ROS_SYSTEM_INFO',\n    payload: fetchSystemDetail(inventoryId)\n});\n\nexport const loadSysRecs = (inventoryId, params) => ({\n    type: 'FETCH_SYSTEM_RECOMMENDATIONS_LIST',\n    payload: fetchSystemRecommendations(inventoryId, params)\n});\n\nexport const loadIsConfiguredInfo = () => ({\n    type: 'LOAD_IS_CONFIGURED_INFO',\n    payload: isROSConfigured()\n});\n\nexport const changeSystemColumns = (payload) =>({\n    type: 'CHANGE_SYSTEM_COLUMNS',\n    payload\n});\n"],"names":["ServiceNotConfigured","className","icon","WrenchIcon","headingLevel","size","hasGutter","Button","component","href","GETTING_STARTED_URL","target","variant","RecommendationsTable","React","defaultFilters","name","label","value","isEmptyFilters","activeFilters","Object","values","find","item","length","constructActiveFilters","entries","map","key","category","chipKey","chips","Array","isArray","onDeleteFilter","itemsToRemove","currItem","filter","SystemRecommendations","props","state","page","perPage","inventoryId","debouncedThrottleHandleChange","debounce","throttleHandleChange","bind","this","requestLoadSysRecs","options","params","description","descriptionFilter","loadSysRecs","filters","setState","pagination","totalRecs","recsData","emptyState","Suspense","fallback","itemCount","onSetPage","_e","updatePagination","onPerPageSelect","isCompact","widgetId","filterConfig","items","type","filterValues","onChange","event","applyFilters","placeholder","activeFiltersConfig","onDelete","isAll","filtersOnDeletion","loading","recommendations","propTypes","PropTypes","connect","systemRecsReducer","recommendationsData","totalRecommendations","dispatch","uuid","handleErrors","response","ok","Error","statusText","fetchSystemDetail","url","URL","ROS_API_ROOT","SYSTEMS_API_ROOT","window","location","origin","insights","chrome","auth","getUser","then","fetch","res","json","result","fetchSystemRecommendations","limit","offset","trim","search","URLSearchParams","toString","resp","status","hasError","loadSystemInfo","payload","loadIsConfiguredInfo","IS_CONFIGURED_API","changeSystemColumns"],"sourceRoot":""}