{"version":3,"file":"js/6510.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/react-dom/client.js","webpack:///./node_modules/react-redux/es/hooks/useSelector.js","webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./src/store/index.js"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { useReducer, useRef, useMemo, useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport { ReactReduxContext } from '../components/Context';\n\nvar refEquality = function refEquality(a, b) {\n  return a === b;\n};\n\nfunction useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      forceRender = _useReducer[1];\n\n  var subscription = useMemo(function () {\n    return createSubscription(store, contextSub);\n  }, [store, contextSub]);\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef();\n  var latestStoreState = useRef();\n  var latestSelectedState = useRef();\n  var storeState = store.getState();\n  var selectedState;\n\n  try {\n    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {\n      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references\n\n      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {\n        selectedState = newSelectedState;\n      } else {\n        selectedState = latestSelectedState.current;\n      }\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\" + latestSubscriptionCallbackError.current.stack + \"\\n\\n\";\n    }\n\n    throw err;\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    latestSelector.current = selector;\n    latestStoreState.current = storeState;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(function () {\n    function checkForUpdates() {\n      try {\n        var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed\n\n        if (newStoreState === latestStoreState.current) {\n          return;\n        }\n\n        var _newSelectedState = latestSelector.current(newStoreState);\n\n        if (equalityFn(_newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n\n        latestSelectedState.current = _newSelectedState;\n        latestStoreState.current = newStoreState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n\n      forceRender();\n    }\n\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.tryUnsubscribe();\n    };\n  }, [store, subscription]);\n  return selectedState;\n}\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useSelector(selector, equalityFn) {\n    if (equalityFn === void 0) {\n      equalityFn = refEquality;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(\"You must pass a selector to useSelector\");\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(\"You must pass a function as a selector to useSelector\");\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\"You must pass a function as an equality function to useSelector\");\n      }\n    }\n\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store,\n        contextSub = _useReduxContext.subscription;\n\n    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport var useSelector = /*#__PURE__*/createSelectorHook();","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport React, { Suspense, lazy } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst RosPage = lazy(() => import(/* webpackChunkName: \"RosPage\" */ './Routes/RosPage/RosPage'));\nconst RosSystemDetail = lazy(() => import(/* webpackChunkName: \"RosSystemDetail\" */ './Routes/RosSystemDetail/RosSystemDetail'));\nconst RosSuggestedInstanceTypes = lazy(\n    () => import(/* webpackChunkName: \"RosSuggestedInstance\" */ './Routes/RosSuggestedInstanceTypes/RosSuggestedInstanceTypes'));\n\nexport const ROSRoutes = () => (\n    <Suspense fallback={<Bullseye>\n        <Spinner />\n    </Bullseye>}>\n        <Routes>\n            <Route path='/' element={<RosPage/>} />\n            <Route path='suggested-instance-types' element={<RosSuggestedInstanceTypes/>} />\n            <Route path=':inventoryId' element={<RosSystemDetail/>} />\n            <Route path='*' element={<Navigate to='/' />}/>\n        </Routes>\n    </Suspense>\n);\n\n","import PropTypes from 'prop-types';\nimport React, { createContext, Component } from 'react';\nimport { ROSRoutes } from './Routes';\nimport './App.scss';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { systemRecsReducer, systemDetailReducer, isConfiguredReducer, systemColumnsReducer, suggestedInstanceTypesReducer } from './store/reducers';\nimport { register } from './store';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const PermissionContext = createContext();\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            hasReadPermissions: undefined,\n            arePermissionsLoaded: false\n        };\n    }\n\n    handlePermissionsUpdate(hasRead) {\n        this.setState({\n            hasReadPermissions: hasRead,\n            arePermissionsLoaded: true\n        });\n    }\n\n    hasPermission(permission, permissionList) {\n        let hasPermission = false;\n\n        permissionList.forEach((permissions) => {\n            if (permission === permissions) {\n                hasPermission = true;\n            }\n        });\n\n        return hasPermission;\n    };\n\n    componentDidMount () {\n        register({\n            notifications: notificationsReducer,\n            systemDetailReducer,\n            systemRecsReducer,\n            isConfiguredReducer,\n            systemColumnsReducer,\n            suggestedInstanceTypesReducer\n        });\n\n        const chrome = this.props.chrome;\n        chrome?.updateDocumentTitle('Resource Optimization - Business');\n\n        (async () => {\n            const rosPermissions = await chrome.getUserPermissions('ros', true);\n            this.handlePermissionsUpdate(\n                rosPermissions.some(({ permission }) => this.hasPermission(permission, ['ros:*:*', 'ros:*:read']))\n            );\n        })();\n\n    }\n\n    render () {\n        const {\n            hasReadPermissions,\n            arePermissionsLoaded } = this.state;\n        return (\n            arePermissionsLoaded\n                ? <PermissionContext.Provider\n                    value={{\n                        permissions: {\n                            hasRead: hasReadPermissions\n                        }\n                    }}>\n                    <NotificationsPortal />\n                    <ROSRoutes />\n                </PermissionContext.Provider>\n                : null\n        );\n    }\n}\n\nApp.propTypes = {\n    chrome: PropTypes.object\n};\n\nconst AppWithChrome = props => {\n    const chrome = useChrome();\n\n    return (\n        <App {...props} chrome={ chrome } />\n    );\n};\n\nexport default AppWithChrome;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nconst RosApp = () => (\n    <Provider store={ process.env.NODE_ENV !== 'production' ? init(logger).getStore() : init().getStore() }>\n        <App />\n    </Provider>\n);\n\nexport default RosApp;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport RosApp from './AppEntry';\n\nconst rootContainer = document.getElementById('root');\nconst root = createRoot(rootContainer);\nroot.render(<RosApp />);\n\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nlet registry;\n\nexport function init (...middleware) {\n    registry = getRegistry({}, [\n        promiseMiddleware,\n        ...middleware\n    ]);\n\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n"],"names":["m","exports","createRoot","hydrateRoot","refEquality","a","b","createSelectorHook","context","useReduxContext","useContext","selector","equalityFn","_useReduxContext","selectedState","store","contextSub","forceRender","useReducer","s","subscription","useMemo","latestSubscriptionCallbackError","useRef","latestSelector","latestStoreState","latestSelectedState","storeState","getState","current","newSelectedState","undefined","err","message","stack","checkForUpdates","newStoreState","_newSelectedState","onStateChange","trySubscribe","tryUnsubscribe","useSelectorWithStoreAndSubscription","useDebugValue","useSelector","f","k","Symbol","for","l","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","g","d","e","h","call","defaultProps","$$typeof","type","props","_owner","Fragment","jsx","jsxs","RosPage","lazy","RosSystemDetail","RosSuggestedInstanceTypes","ROSRoutes","Suspense","fallback","Bullseye","Spinner","Routes","Route","path","element","Navigate","to","PermissionContext","createContext","App","Component","constructor","super","this","state","hasReadPermissions","arePermissionsLoaded","handlePermissionsUpdate","hasRead","setState","hasPermission","permission","permissionList","forEach","permissions","componentDidMount","notifications","systemDetailReducer","systemRecsReducer","isConfiguredReducer","systemColumnsReducer","suggestedInstanceTypesReducer","chrome","updateDocumentTitle","rosPermissions","getUserPermissions","some","render","Provider","value","propTypes","useChrome","rootContainer","document","getElementById","getStore","A","registry","init","middleware","register","args"],"sourceRoot":""}