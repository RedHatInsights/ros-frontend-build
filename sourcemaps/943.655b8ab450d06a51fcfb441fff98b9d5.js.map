{"version":3,"file":"js/943.1654780128710.b7a6bf7d7689998bdb65.js","mappings":"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","sources":["webpack:///./src/Components/RosTable/ExpandedRow.js","webpack:///./src/Components/RosTable/SystemState.js","webpack:///./src/constants.js","webpack:///./src/Components/RosTable/RenderColumn.js","webpack:///./src/Components/RosTable/ProgressScoreBar.js","webpack:///./src/store/entitiesReducer.js","webpack:///./src/store/systemDetail.js","webpack:///./src/store/systemRecs.js","webpack:///./src/store/isConfigured.js","webpack:///./src/store/systemColumns.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListGroup,\n    DescriptionListDescription\n} from '@patternfly/react-core';\nimport { NO_DATA_VALUE } from '../../constants';\n\nexport const ExpandedRow = ({ inventoryId, cloudProvider, instanceType, idlingTime }) =>  {\n\n    const cloudProviderValue = cloudProvider === null ? NO_DATA_VALUE : cloudProvider;\n    const instanceTypeValue = instanceType === null ? NO_DATA_VALUE : instanceType;\n    const idlingTimeValue = idlingTime === null ? NO_DATA_VALUE : `${idlingTime}%`;\n\n    const inlineFieldsArray = [\n        { label: 'Provider', value: cloudProviderValue },\n        { label: 'Instance type', value: instanceTypeValue },\n        { label: 'Idling time', value: idlingTimeValue }\n    ];\n\n    return (\n        <DescriptionList className='expanded-row' isCompact isHorizontal>\n            <DescriptionListGroup id={inventoryId}>\n                {inlineFieldsArray.map((field, index) => (\n                    <React.Fragment key={index}>\n                        <DescriptionListTerm>{ field.label }</DescriptionListTerm>\n                        <DescriptionListDescription>{ field.value }</DescriptionListDescription>\n                    </React.Fragment>\n                ))}\n            </DescriptionListGroup>\n        </DescriptionList>\n    );\n};\n\nExpandedRow.propTypes = {\n    inventoryId: propTypes.string,\n    cloudProvider: propTypes.string,\n    instanceType: propTypes.string,\n    idlingTime: propTypes.string\n};\n","import React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon, ExclamationTriangleIcon, CheckCircleIcon,\n    AngleDoubleUpIcon, AngleDoubleDownIcon,\n    AutomationIcon, InProgressIcon, TachometerAltIcon\n} from '@patternfly/react-icons';\n\nimport propTypes from 'prop-types';\n\nconst stateDetails = (val) =>  ({\n    Oversized: {\n        text: 'This system is not fully consuming available resources and may be oversized.',\n        icon: <AngleDoubleUpIcon color='#f09800' size='sm'/>\n    },\n    Undersized: {\n        text: 'This system is depleting available resources and may be undersized.',\n        icon: <AngleDoubleDownIcon color='red' size='sm'/>\n    },\n    Idling: {\n        text: 'This system displays higher idling cycles than is expected.',\n        icon: <AutomationIcon size='sm'/>\n    },\n    'Storage rightsizing': {\n        text: 'This system is experiencing a storage Input/Output bottleneck.',\n        icon: <ExclamationTriangleIcon color='#f09800' size='sm'/>\n    },\n    Optimized: {\n        text: 'This system is running efficiently.',\n        icon: <CheckCircleIcon color='green' size='sm'/>\n    },\n    Crashloop: {\n        text: 'This system is experiencing a crash loop.',\n        icon: <ExclamationCircleIcon color='red' size='sm'/>\n    },\n    'Waiting for data': {\n        text: 'This system is configured, please allow 24 hours for your upload to complete.',\n        icon: <InProgressIcon color='#2B9AF3' size='sm'/>\n    },\n    'Under pressure': {\n        text: 'System resources adequate but experiencing occasional peaks.',\n        icon: <TachometerAltIcon color='#030303' size='sm'/>\n    }\n}[val] || {});\n\nexport const SystemState = ({ stateValue }) =>  {\n    const { text, icon } = stateDetails(stateValue);\n    return (\n        <span>\n            <span>\n                { text ?\n                    <Tooltip content={<div>{ text }</div>}>\n                        <span>{ icon } { stateValue }</span>\n                    </Tooltip>\n                    : stateValue }\n            </span>\n        </span>\n    );\n};\n\nSystemState.propTypes = {\n    stateValue: propTypes.string\n};\n","import React from 'react';\nimport { nowrap } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\nimport { displayState, recommendations, scoreProgress, systemName } from './store/entitiesReducer';\nimport { diskUsageData, displayLastReported, displayOS } from './Components/RosTable/RenderColumn';\n\n// API\nexport const ROS_API_ROOT = '/api/ros/v1';\nexport const IS_CONFIGURED_API = '/is_configured';\nexport const SYSTEMS_API_ROOT = '/systems';\nexport const RECOMMENDATION_RATING_API = '/rating';\nexport const EXECUTIVE_REPORT_API = '/executive_report';\n\n// Feedback\nexport const NEGATIVE_FEEDBACK = -1;\nexport const NEUTRAL_FEEDBACK = 0;\nexport const POSITIVE_FEEDBACK = 1;\n\n// No Data State\nexport const NO_DATA_STATE = 'Waiting for data';\nexport const NO_DATA_VALUE = 'N/A';\n\n// Getting started URL\n// eslint-disable-next-line max-len\nexport const GETTING_STARTED_URL = 'https://access.redhat.com/documentation/en-us/red_hat_insights/2022/html/assessing_and_monitoring_rhel_resource_optimization_with_insights_for_red_hat_enterprise_linux/proc-ros-install_ros-getting-started';\n\n// Custom Filters\nexport const CUSTOM_FILTERS = {\n    state: {\n        label: 'State',\n        type: 'checkbox',\n        filterValues: {\n            items: [\n                {\n                    label: 'Idling',\n                    value: 'Idling'\n                },\n                {\n                    label: 'Optimized',\n                    value: 'Optimized'\n                },\n                {\n                    label: 'Oversized',\n                    value: 'Oversized'\n                },\n                {\n                    label: 'Under pressure',\n                    value: 'Under pressure'\n                },\n                {\n                    label: 'Undersized',\n                    value: 'Undersized'\n                },\n                {\n                    label: 'Waiting for data',\n                    value: 'Waiting for data'\n                }\n            ]\n        }\n    },\n    os: {\n        label: 'Operating system',\n        type: 'checkbox',\n        filterValues: {\n            items: [\n                {\n                    label: 'RHEL 7.0',\n                    value: 'RHEL 7.0'\n                },\n                {\n                    label: 'RHEL 7.1',\n                    value: 'RHEL 7.1'\n                },\n                {\n                    label: 'RHEL 7.2',\n                    value: 'RHEL 7.2'\n                },\n                {\n                    label: 'RHEL 7.3',\n                    value: 'RHEL 7.3'\n                },\n                {\n                    label: 'RHEL 7.4',\n                    value: 'RHEL 7.4'\n                },\n                {\n                    label: 'RHEL 7.5',\n                    value: 'RHEL 7.5'\n                },\n                {\n                    label: 'RHEL 7.6',\n                    value: 'RHEL 7.6'\n                },\n                {\n                    label: 'RHEL 7.7',\n                    value: 'RHEL 7.7'\n                },\n                {\n                    label: 'RHEL 7.8',\n                    value: 'RHEL 7.8'\n                },\n                {\n                    label: 'RHEL 7.9',\n                    value: 'RHEL 7.9'\n                },\n                {\n                    label: 'RHEL 8.0',\n                    value: 'RHEL 8.0'\n                },\n                {\n                    label: 'RHEL 8.1',\n                    value: 'RHEL 8.1'\n                },\n                {\n                    label: 'RHEL 8.2',\n                    value: 'RHEL 8.2'\n                },\n                {\n                    label: 'RHEL 8.3',\n                    value: 'RHEL 8.3'\n                },\n                {\n                    label: 'RHEL 8.4',\n                    value: 'RHEL 8.4'\n                },\n                {\n                    label: 'RHEL 8.5',\n                    value: 'RHEL 8.5'\n                }\n            ]\n        }\n    }\n};\n\n// Query params for state filters\nexport const WITH_SUGGESTIONS_PARAM = 'with_suggestions';\nexport const WITH_WAITING_FOR_DATA_PARAM = 'with_waiting_for_data';\n\n// Systems table columns\n\nexport const SYSTEM_TABLE_COLUMNS = [\n    {\n        key: 'display_name',\n        title: 'Name',\n        modalTitle: 'Name',\n        renderFunc: (data, id, item) => systemName(data, id, item),\n        isChecked: true,\n        isDisabled: true,\n        isShownByDefault: true\n    },\n    {\n        key: 'os',\n        title: (\n            <Tooltip content={<span>Operating system</span>}>\n                <span>OS</span>\n            </Tooltip>\n        ),\n        modalTitle: 'Operating system',\n        dataLabel: 'Operating system',\n        renderFunc: (data) => displayOS(data),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'performance_utilization.cpu',\n        title: 'CPU utilization',\n        modalTitle: 'CPU utilization',\n        renderFunc: (data, id, item) => scoreProgress(data, id, item),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'performance_utilization.memory',\n        title: 'Memory utilization',\n        modalTitle: 'Memory utilization',\n        renderFunc: (data, id, item) => scoreProgress(data, id, item),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'performance_utilization.max_io',\n        title: (\n            <Tooltip content={<span>IOPS</span>}>\n                <span>I/O utilization</span>\n            </Tooltip>\n        ),\n        modalTitle: 'I/O utilization',\n        dataLabel: 'I/O utilization',\n        renderFunc: (data, id, item) => diskUsageData(data, id, item),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'number_of_suggestions',\n        title: 'Suggestions',\n        modalTitle: 'Suggestions',\n        renderFunc: (data, id, item) => recommendations(data, id, item),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'state',\n        title: 'State',\n        modalTitle: 'State',\n        renderFunc: (data) => displayState(data),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true\n    },\n    {\n        key: 'report_date',\n        title: 'Last reported',\n        modalTitle: 'Last reported',\n        renderFunc: (data) => displayLastReported(data),\n        isChecked: true,\n        isDisabled: false,\n        isShownByDefault: true,\n        transforms: [nowrap],\n        cellTransforms: [nowrap]\n    }\n];\n\n// Reports\n\nexport const SYSTEMS_PDF_REPORT_TITLE = 'Insights Resource Optimization Systems Report';\nexport const SYSTEMS_REPORT_FILE_NAME = 'resource_optimization--';\n\nexport const pdfRowKeys = ['display_name', 'os', 'performance_utilization.cpu', 'performance_utilization.memory', 'performance_utilization.max_io',\n    'number_of_suggestions', 'state', 'report_date'];\n\nexport const reportRowKeys = ['display_name', 'os', 'performance_utilization.cpu', 'performance_utilization.memory', 'performance_utilization.max_io',\n    'number_of_suggestions', 'state', 'cloud_provider', 'instance_type', 'idling_time', 'report_date'];\n\nexport const percentageKeys = ['performance_utilization.cpu', 'performance_utilization.memory', 'idling_time'];\n\nexport const PDF_RECORDS_PER_PAGE = {\n    firstPageCount: 16,\n    otherPageCount: 22\n\n};\n\nexport const REPORT_NOTIFICATIONS = {\n    start: {\n        variant: 'info',\n        title: 'Generating data. Download may take a moment to start.'\n    },\n    success: {\n        variant: 'success',\n        title: 'Export successful'\n    },\n    failure: {\n        variant: 'danger',\n        autoDismiss: false,\n        title: 'Export failed. Please try exporting again.'\n    }\n};\n// Historical Chart\nexport const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const DATE_RANGE_7_DAYS = 7;\nexport const DATE_RANGE_49_DAYS = 49;\nexport const RANGE_DROPDOWN_45_DAYS = 45;\n","import { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { NO_DATA_STATE, NO_DATA_VALUE } from '../../constants';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport './RenderColumn.scss';\n\nexport const diskUsageData = (data, id, item) => {\n    const { state, performance_utilization: performanceUtilization } = item;\n    const { io_all: iopsAll } = performanceUtilization;\n\n    return (\n        state === NO_DATA_STATE ?\n            <span>{ NO_DATA_VALUE }</span> :\n            <Tooltip position=\"right\" content={\n                <div>\n                    <table>\n                        <tr>\n                            <th>Device name</th>\n                            <th>Value</th>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"100%\" className=\"seperator\"></td>\n                        </tr>\n                        {\n                            Object.keys(iopsAll).map((deviceName, index) =>{\n                                return (\n                                    <tr key={index}>\n                                        <td>{deviceName}</td>\n                                        <td>{iopsAll[deviceName]}</td>\n                                        <td>IOPS</td>\n                                    </tr>\n                                );\n                            })\n                        }\n                    </table>\n                </div>\n            }>\n                <span>{data}</span>\n            </Tooltip>\n    );\n};\n\nexport const displayOS = (data) => {\n    return (\n        data === null ?\n            <span>{ NO_DATA_VALUE }</span> :\n            <span>{ data }</span>\n    );\n};\n\nexport const displayLastReported = (data) => {\n    return (\n        data === null ?\n            <span>{ NO_DATA_VALUE }</span> :\n            <DateFormat date={ data } />\n    );\n};\n","import React from 'react';\nimport { Progress } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nexport const ProgressScoreBar = ({ utilizedValue, measureLocation, eleId }) =>  {\n    return (\n        <React.Fragment>\n            <Progress value={ utilizedValue }\n                className={ `progress-score-bar blue-300` }\n                measureLocation={ measureLocation }\n                {  ...(eleId ? { id: eleId } : null) } />\n        </React.Fragment>\n    );\n};\n\nProgressScoreBar.propTypes = {\n    measureLocation: propTypes.string,\n    valueScore: propTypes.number,\n    utilizedValue: propTypes.number,\n    eleId: propTypes.string\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ExpandedRow } from '../Components/RosTable/ExpandedRow';\nimport { ProgressScoreBar } from '../Components/RosTable/ProgressScoreBar';\nimport { SystemState } from '../Components/RosTable/SystemState';\nimport { NO_DATA_VALUE, NO_DATA_STATE } from '../constants';\n\nexport const systemName = (displayName, id, { inventory_id: inventoryId, isDeleted, state }) => {\n    return (\n        isDeleted ? (\n            <Tooltip content={<div>{displayName} has been deleted from inventory</div>}>\n                <span tabIndex=\"0\">{ displayName }</span>\n            </Tooltip>\n        ) :\n            state === NO_DATA_STATE ?\n                (\n                    <span>{ displayName }</span>\n                ) :\n                (\n                    <Link to={{ pathname: `/${inventoryId}` }} className={ `pf-link system-link link-${inventoryId}` }>\n                        { displayName }\n                    </Link>\n                )\n\n    );\n};\n\nexport const displayState = (data) => {\n    return (<SystemState stateValue={ data }/>);\n};\n\nexport const scoreProgress = (data, id, { state }) => {\n    return (\n        state === NO_DATA_STATE ?\n            <span>{ NO_DATA_VALUE }</span> :\n            <ProgressScoreBar measureLocation='outside'\n                utilizedValue={data} />\n    );\n};\n\nexport const recommendations = (data, id, { inventory_id: inventoryId, isDeleted, state }) => {\n    return (\n        isDeleted ? <span>{ state === NO_DATA_STATE ? NO_DATA_VALUE : data }</span>\n            : state === NO_DATA_STATE ?\n                (\n                    <span>{ NO_DATA_VALUE }</span>\n                )\n                : (\n                    <Link to={{ pathname: `/${inventoryId}` }}\n                        className={ `pf-link link-${inventoryId}` }>\n                        { data }\n                    </Link>\n                )\n    );\n};\n\nconst addExpandedView = (rowData) => {\n    const {\n        id, cloud_provider: cloudProvider, instance_type: instanceType,\n        idling_time: idlingTime\n    } = rowData;\n    return (<ExpandedRow { ...{ id, cloudProvider, instanceType, idlingTime } } />);\n};\n\nfunction modifyInventory(columns, state) {\n\n    return {\n        ...state,\n        columns,\n        rows: state.rows.map((row) => ({\n            ...row,\n            children: addExpandedView(row)\n        })),\n        loaded: true\n    };\n}\n\nconst openExpandedView = (state, action) => {\n    return {\n        ...state,\n        rows: state.rows.map(row => ({\n            ...row,\n            isOpen: row.id === action.payload.id ? action.payload.isOpen : row.isOpen\n        }))\n    };\n};\n\nexport const entitiesReducer = ({ LOAD_ENTITIES_FULFILLED }, columns) => applyReducerHash({\n    [LOAD_ENTITIES_FULFILLED]: (state) =>  modifyInventory(columns, state),\n    ['EXPAND_ROW']: openExpandedView\n});\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {};\n\nexport default applyReducerHash({\n    LOAD_ROS_SYSTEM_INFO_PENDING: (state) => ({ ...state, systemInfo: {}, loading: true }),\n    LOAD_ROS_SYSTEM_INFO_FULFILLED: (state, { payload }) => {\n        return {\n            ...state,\n            loading: false,\n            systemInfo: payload\n        };\n    }\n}, initialState);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {\n    loading: false,\n    recommendationsData: [],\n    systemRecError: {},\n    totalRecommendations: 0,\n    emptyState: false\n};\n\nexport default applyReducerHash({\n    FETCH_SYSTEM_RECOMMENDATIONS_LIST_PENDING: (state) => ({ ...state, loading: true }),\n    FETCH_SYSTEM_RECOMMENDATIONS_LIST_FULFILLED: (state, action) => {\n        if (action.payload.hasError) {\n            return { ...state, loading: false, emptyState: true };\n        } else {\n            return {\n                ...state,\n                loading: false,\n                emptyState: false,\n                recommendationsData: action.payload.data,\n                totalRecommendations: action.payload.meta.count\n            };\n        }\n    },\n    FETCH_SYSTEM_RECOMMENDATIONS_LIST_REJECTED: (state, action) => ({\n        ...state, loading: false,  emptyState: true, systemRecError: action.payload\n    })\n}, initialState);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {\n    loaded: false,\n    serverError: {},\n    serverCode: '',\n    showConfigSteps: false\n};\n\nexport default applyReducerHash({\n    LOAD_IS_CONFIGURED_INFO_PENDING: (state) => ({ ...state, loaded: true }),\n    LOAD_IS_CONFIGURED_INFO_FULFILLED: (state, action) => {\n        return {\n            ...state,\n            loaded: false,\n            showConfigSteps: action.payload.success ? false : true,\n            serverCode: action.payload.code\n        };\n    },\n    LOAD_IS_CONFIGURED_INFO_REJECTED: (state, action) => ({\n        ...state, loaded: false,  serverError: action.payload\n    })\n}, initialState);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { SYSTEM_TABLE_COLUMNS } from '../constants';\n\nconst initialState = {\n    columns: SYSTEM_TABLE_COLUMNS\n};\n\nexport default applyReducerHash({\n    CHANGE_SYSTEM_COLUMNS: (state, action) => ({\n        ...state,\n        columns: action.payload.columns\n    }\n    )\n}, initialState);\n"],"names":["ExpandedRow","inventoryId","cloudProvider","instanceType","idlingTime","inlineFieldsArray","label","value","NO_DATA_VALUE","DescriptionList","className","isCompact","isHorizontal","DescriptionListGroup","id","map","field","index","key","DescriptionListTerm","DescriptionListDescription","propTypes","SystemState","val","stateValue","Oversized","text","icon","color","size","Undersized","Idling","Optimized","Crashloop","Tooltip","content","ROS_API_ROOT","IS_CONFIGURED_API","SYSTEMS_API_ROOT","RECOMMENDATION_RATING_API","EXECUTIVE_REPORT_API","NEGATIVE_FEEDBACK","NEUTRAL_FEEDBACK","POSITIVE_FEEDBACK","NO_DATA_STATE","GETTING_STARTED_URL","CUSTOM_FILTERS","state","type","filterValues","items","os","WITH_SUGGESTIONS_PARAM","WITH_WAITING_FOR_DATA_PARAM","SYSTEM_TABLE_COLUMNS","title","modalTitle","renderFunc","data","item","systemName","isChecked","isDisabled","isShownByDefault","dataLabel","displayOS","scoreProgress","iopsAll","performance_utilization","io_all","position","colSpan","Object","keys","deviceName","diskUsageData","recommendations","displayState","DateFormat","date","displayLastReported","transforms","nowrap","cellTransforms","SYSTEMS_PDF_REPORT_TITLE","SYSTEMS_REPORT_FILE_NAME","pdfRowKeys","reportRowKeys","percentageKeys","PDF_RECORDS_PER_PAGE","firstPageCount","otherPageCount","REPORT_NOTIFICATIONS","start","variant","success","failure","autoDismiss","MONTHS","DATE_RANGE_7_DAYS","DATE_RANGE_49_DAYS","RANGE_DROPDOWN_45_DAYS","ProgressScoreBar","utilizedValue","measureLocation","eleId","Progress","valueScore","displayName","inventory_id","isDeleted","tabIndex","Link","to","pathname","openExpandedView","action","rows","row","isOpen","payload","entitiesReducer","columns","LOAD_ENTITIES_FULFILLED","applyReducerHash","children","rowData","cloud_provider","instance_type","idling_time","loaded","modifyInventory","LOAD_ROS_SYSTEM_INFO_PENDING","systemInfo","loading","LOAD_ROS_SYSTEM_INFO_FULFILLED","FETCH_SYSTEM_RECOMMENDATIONS_LIST_PENDING","FETCH_SYSTEM_RECOMMENDATIONS_LIST_FULFILLED","hasError","emptyState","recommendationsData","totalRecommendations","meta","count","FETCH_SYSTEM_RECOMMENDATIONS_LIST_REJECTED","systemRecError","LOAD_IS_CONFIGURED_INFO_PENDING","LOAD_IS_CONFIGURED_INFO_FULFILLED","showConfigSteps","serverCode","code","LOAD_IS_CONFIGURED_INFO_REJECTED","serverError","initialState","CHANGE_SYSTEM_COLUMNS"],"sourceRoot":""}