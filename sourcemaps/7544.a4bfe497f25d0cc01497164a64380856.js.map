{"version":3,"file":"js/7544.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/ExpandableRowContent.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/EmptyTable/EmptyTable.js","webpack:///./src/Components/EmptyStateDisplay/EmptyStateDisplay.js","webpack:///./src/Components/SystemDetail/RecommendationsTable.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table.mjs';\nexport const ExpandableRowContent = (_a) => {\n    var { children = null } = _a, props = __rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.tableExpandableRowContent) }), children));\n};\nExpandableRowContent.displayName = 'ExpandableRowContent';\n//# sourceMappingURL=ExpandableRowContent.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport '../EmptyTable/EmptyTable.css';\nvar EmptyTable = function (_a) {\n    var _b;\n    var centered = _a.centered, className = _a.className, children = _a.children, props = __rest(_a, [\"centered\", \"className\", \"children\"]);\n    var emptyTableClasses = classNames('ins-c-table__empty', (_b = {}, _b[\"is-centered\"] = centered, _b), className);\n    return (_jsxs(\"div\", __assign({ className: emptyTableClasses }, props, { children: [' ', children] })));\n};\nexport default EmptyTable;\n//# sourceMappingURL=EmptyTable.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, EmptyStateHeader, EmptyStateFooter  } from '@patternfly/react-core';\n\nexport const EmptyStateDisplay = ({ button, color, error, icon, isSmall, text, title }) => (\n    <EmptyState variant={ isSmall ? EmptyStateVariant.sm : EmptyStateVariant.lg }>\n        { icon && <EmptyStateIcon\n            icon={ icon }\n            color={ color ? color : null }\n            className={ isSmall ? 'small-empty-state-icon' : null }\n        /> }\n        <EmptyStateHeader titleText={<>{ title }</>} headingLevel={ isSmall ? 'h5' : 'h1' } />\n        <EmptyStateBody>\n            { text?.join('\\n') }\n            { error }\n        </EmptyStateBody><EmptyStateFooter>\n            { button }\n        </EmptyStateFooter></EmptyState>\n);\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n","import React, { Fragment } from 'react';\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    ExpandableRowContent\n} from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport { flatMap } from 'lodash';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { EmptyStateDisplay } from '../EmptyStateDisplay/EmptyStateDisplay';\nimport { CheckCircleIcon, BullseyeIcon, WrenchIcon, LightbulbIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\nimport './RecommendationsTable.scss';\nimport { ENABLE_PSI_URL } from '../../constants';\n\nclass RecommendationsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true\n        };\n    }\n\n    onExpandToggle = () => {\n        this.setState({ expanded: !this.state.expanded });\n    };\n\n    renderExpandedView = (row, index) => {\n        const { description, resolution, reason, detected_issues: detectedIssues,\n            current_instance: currentInstance, suggested_instances: suggestedInstances,\n            psi_enabled: psiEnabled } = row;\n\n        return (\n            <Table aria-label=\"Nested column headers with expandable rows table\" variant=\"compact\" className=\"ros-recommendations-table\" >\n                <Thead >\n                    <Tr>\n                        <Th />\n                        <Th>\n                      Name\n                        </Th>\n                    </Tr>\n                </Thead>\n                <Tbody key={'Developer program 1'} isExpanded={this.state.expanded}>\n                    <Tr>\n                        <Td expand={{\n                            rowIndex: index,\n                            isExpanded: this.state.expanded,\n                            onToggle: this.onExpandToggle,\n                            expandId: 'expandable-recommendation'\n                        }} />\n                        <Td dataLabel={'description'}>{description}</Td>\n                    </Tr>\n                    <Tr isExpanded={this.state.expanded}>\n                        <Td></Td>\n                        <Td colSpan={6}>\n                            <ExpandableRowContent>\n                                <TextContent>\n                                    <Text component={TextVariants.p}>\n                                        <Text className=\"margin-text-bottom\">\n                                            <BullseyeIcon/><strong className=\"strong-tag-style\">Detected issues</strong>\n                                        </Text>\n                                        {reason}\n                                    </Text>\n                                    { detectedIssues && <Table\n                                        arial-label=\"Detected issues table\"\n                                        variant=\"compact\"\n                                        borders={false}\n                                        className=\"table-border-top detected-issues-table\"\n                                    >\n                                        <Thead>\n                                            <Tr>\n                                                <Th>Identified issues by ROS</Th>\n                                            </Tr>\n                                        </Thead>\n                                        <Tbody>\n                                            <Tr>\n                                                <Td dataLabel=\"Identified issues by ROS\" className=\"newline tab\">\n                                                    {detectedIssues}</Td>\n                                            </Tr>\n                                        </Tbody>\n                                    </Table> }\n                                    <hr/>\n                                    <Text component={TextVariants.p}>\n                                        <Text className=\"margin-text-bottom\">\n                                            <WrenchIcon/><strong className=\"strong-tag-style\">Suggestion</strong>\n                                        </Text>\n                                        {resolution}\n                                    </Text>\n                                    { currentInstance && suggestedInstances && <Table\n                                        arial-label=\"Suggestions table\"\n                                        variant=\"compact\"\n                                        borders={false}\n                                        className=\"table-border-top suggestions-table\"\n                                    >\n                                        <Thead>\n                                            <Tr>\n                                                <Th>Instance</Th>\n                                                <Th>Suggested instances that fit the load better</Th>\n                                            </Tr>\n                                        </Thead>\n                                        <Tbody>\n                                            <Tr>\n                                                <Td dataLabel=\"Instance\">{currentInstance}</Td>\n                                                <Td dataLabel=\"Suggested instances that fit the load better\" className=\"newline\">\n                                                    {suggestedInstances}</Td>\n                                            </Tr>\n                                        </Tbody>\n                                    </Table>\n                                    }\n                                    {\n                                        !psiEnabled &&\n                                        <>\n                                            <hr/>\n                                            <Text component={TextVariants.p}>\n                                                <Text className=\"margin-text-bottom\"><LightbulbIcon/>\n                                                    <strong className=\"strong-tag-style\">Related Knowledgebase Article</strong>\n                                                </Text>\n                                                {/* eslint-disable-next-line max-len */}\n                                                <Text component={TextVariants.a} target='_blank' href={ENABLE_PSI_URL}>\n                                                    This suggestion could be improved by enabling PSI <ExternalLinkAltIcon/>\n                                                </Text>\n                                            </Text>\n                                        </>\n                                    }\n                                </TextContent>\n                            </ExpandableRowContent>\n                        </Td>\n\n                    </Tr>\n                </Tbody>\n            </Table>\n        );\n    };\n\n    createRows() {\n        const rowsData = this.props.recommendations;\n        if (rowsData && rowsData.length !== 0) {\n            return flatMap(rowsData, (row, index) => {\n                return this.renderExpandedView(row, index);\n            });\n        } else {\n            return <EmptyTable className='recs-table-empty'>\n                <EmptyStateDisplay title=\"No suggestions\"\n                    text={[\n                        'There are no suggestions for this system.'\n                    ]}\n                    icon={CheckCircleIcon}\n                    color='green'/>\n            </EmptyTable>;\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.createRows()}\n            </Fragment>\n\n        );\n\n    }\n}\n\nRecommendationsTable.propTypes = {\n    recommendations: propTypes.array\n};\n\nexport default RecommendationsTable;\n"],"names":["ExpandableRowContent","_a","children","props","__rest","Object","assign","className","tableExpandableRowContent","displayName","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_b","centered","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","emptyTableClasses","EmptyStateDisplay","button","color","error","icon","isSmall","text","title","EmptyState","variant","EmptyStateVariant","sm","lg","EmptyStateIcon","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","join","EmptyStateFooter","propTypes","RecommendationsTable","constructor","super","state","expanded","onExpandToggle","setState","renderExpandedView","row","index","description","resolution","reason","detected_issues","detectedIssues","current_instance","currentInstance","suggested_instances","suggestedInstances","psi_enabled","psiEnabled","Table","Thead","Tr","Th","Tbody","key","isExpanded","Td","expand","rowIndex","onToggle","expandId","dataLabel","colSpan","TextContent","Text","component","TextVariants","borders","a","target","href","createRows","rowsData","recommendations","flatMap","render","Fragment"],"sourceRoot":""}